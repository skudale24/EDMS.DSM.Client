@page "/"

@using Toolbelt.Blazor.PWA.Updater.Service
@inject IPWAUpdaterService PWAUpdaterService

<style>
    :root {
        --version-label-content: "Version @EndPoints.Version";
    }

    .icon-link:hover {
        cursor: pointer;
        color: blue;
        text-decoration: underline;
    }

    .mud-main-content {
        padding: 0px;
    }

    .mud-container {
        padding-left: 0px;
        padding-right: 0px;
        padding-bottom: 0px;
        width: 99.4%;
    }

    .mud-table-container {
        height: calc(100vh - 83px);
        border-top: 3px solid #2C9199;
        /*position: relative;*/
    }

    /*.mud-table-toolbar::after {
                content: '';
                position: absolute;
                top: 29px;
                left: 16px;
                width: 194px;
                height: 2px;
                background: linear-gradient(to right, #2C9199, transparent 50%);
                background-color: #2C9199;
                box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.6);
                z-index: 999;
        }*/

    .mud-table-pagination-toolbar::before {
        content: var(--version-label-content);
        position: absolute;
        top: 15px;
        left: 10px;
        width: 15%;
        height: 3px;
        font-family: 'Helvetica Neue', Helvetica;
        z-index: 999;
        font-size: 11px;
    }

    .mud-toolbar {
        height: 39px;
    }

    mud-table-row:hover {
        background-color: rgba(44 145 153 / .3);
    }

    .mud-table-root .mud-table-body .mud-table-row:hover .mud-table-cell {
        /*color: #fff;*/
    }

    .mud-table-row:hover td a {
        /*color: #fff !important;*/
    }

    .mud-table-cell {
        font-size: 12px !important;
    }

    /*.mud-typography-h6 {
                border-bottom: 3px solid #2C9199;
                padding-bottom: 3px;
            }*/

    .text-blue {
        color: rgb(0, 58, 112);
    }

    .grid-header-col {
        --tw-bg-opacity: 1;
        background-color: rgba(255, 255, 255);
    }

        .grid-header-col span {
            font-weight: 600;
            color: rgb(0, 58, 112);
        }

    .mud-table-pagination-select .mud-input .mud-input-root {
        font-size: .75rem;
    }

    .custom-linear-progress {
        --mud-linear-progress-color: "#2C9199 !important";
        --mud-linear-progress-background-color: "#2C9199 !important";
    }
</style>

<MudDataGrid T="CommunicationDTO" MultiSelection="false" Items="@Elements" @ref="_grid"
             SortMode="MudBlazor.SortMode.Single" QuickFilter="@_quickFilter"
             Filterable="true" FilterCaseSensitivity="DataGridFilterCaseSensitivity.CaseInsensitive"
             Loading="@isLoading" Dense="true" Hover="true" RowsPerPage="50"
             Hideable="false" RowClick="@RowClicked" SelectedItemsChanged="@SelectedItemsChanged"
             Striped="true" ShowFilterIcons="true" FixedHeader="true" Bordered="true">
    <ToolBarContent>
        <MudGrid>
            <MudItem class="align-self-center">
                <MudText Typo="Typo.h6">Tools: Customer Communications</MudText>
            </MudItem>
            <MudItem class="d-flex align-items-center ml-auto">
                <MudTextField @bind-Value="_searchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="true"
                              AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"
                              Style="margin-top: 0px !important;font-size:.75rem; font-weight:500"></MudTextField>
                <MudSpacer />
                <div class="d-flex align-items-center justify-content-center ml-2 icon-link mt-2">
                    <MudLink OnClick="@(async () => await ExportGridClicked())">
                        <div class="d-flex align-items-center justify-content-center">
                            <MudIcon Icon="@Icons.Custom.FileFormats.FileExcel" Color="@Color.Tertiary" Class="ml-2" Title="Export"></MudIcon>
                        </div>
                    </MudLink>
                    <MudText Class="ml-2"> | </MudText>
                    <MudLink OnClick="@(async () => await GetCommunicationsList())">
                        <MudIcon Icon="@Icons.Material.Filled.Refresh" Color="@Color.Tertiary" Class="ml-2" Title="Retain Filters & Refresh"></MudIcon>
                    </MudLink>
                </div>
            </MudItem>
        </MudGrid>
    </ToolBarContent>
    <ColGroup>
        <col style="width:18%;" />  <!--Letter Type-->
        <col style="width:18%;" />  <!--Utility-->
        <col style="width:14%;" />  <!--Application Count-->
        <col style="width:10%;" />  <!--Action-->
        <col style="width:15%;" />  <!--Letter Generated Date-->
        <col style="width:15%;" />  <!--Letter Generated By-->
        <col />                     <!--Customer List-->
    </ColGroup>
    <Columns>
        <PropertyColumn Property="x => x.TemplateName" Title="Letter Type" ShowColumnOptions="false"
                        HeaderClass="grid-header-col">
            <HeaderTemplate>
                <span>Letter Type</span>
            </HeaderTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.CompanyName" Title="Utility" ShowColumnOptions="false"
                        HeaderClass="grid-header-col">
            <HeaderTemplate>
                <span>Utility</span>
            </HeaderTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.CountofApplications" Title="Application Count" ShowColumnOptions="false"
                        HeaderClass="grid-header-col">
            <HeaderTemplate>
                <span>Application Count</span>
            </HeaderTemplate>
        </PropertyColumn>
        <TemplateColumn Title="Action" Filterable="false" Sortable="false"
                        HeaderClass="grid-header-col">
            <HeaderTemplate>
                <span>Action</span>
            </HeaderTemplate>
            <CellTemplate>
                <MudStack Row>
                    @if (context.Item?.IsProcessing == true)
                    {
                        <MudProgressLinear Indeterminate="true" Color="Color.Info">
                        </MudProgressLinear>
                    }
                    @if (context.Item?.IsProcessing == false)
                    {
                        if (context.Item?.ActionText?.StartsWith("Generate") == true)
                        {
                            <MudLink Typo="Typo.body2" DataLabel="Actual File Name" Href="javascript:void(0);" OnClick="@(async () => await ProcessLetterGeneration(context.Item))" Underline="Underline.Always">@context.Item.ActionText</MudLink>
                        }
                        else
                        {
                            <MudLink Typo="Typo.body2" DataLabel="Actual File Name" Href="javascript:void(0);" OnClick="@(async () => await DownloadSourceFile(context.Item))" Underline="Underline.Always">@context.Item?.ActionText</MudLink>
                        }
                    }
                </MudStack>
            </CellTemplate>
        </TemplateColumn>
        <PropertyColumn Property="x => x.GeneratedDate" Title="Letter Generated Date" ShowColumnOptions="false"
                        HeaderClass="grid-header-col">
            <HeaderTemplate>
                <span>Letter Generated Date</span>
            </HeaderTemplate>
            <CellTemplate>
                <MudText Typo="Typo.body2">@context.Item?.GeneratedDate?.ToString("MM/dd/yyyy")</MudText>
            </CellTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.GeneratedBy" Title="Letter Generated by" ShowColumnOptions="false"
                        HeaderClass="grid-header-col">
            <HeaderTemplate>
                <span>Letter Generated by</span>
            </HeaderTemplate>
        </PropertyColumn>
        <TemplateColumn Title="Customer List" Filterable="false" Sortable="false" CellStyle="text-align: center;"
                        HeaderClass="grid-header-col">
            <HeaderTemplate>
                <span>Customer List (xlsx)</span>
            </HeaderTemplate>
            <CellTemplate>
                <MudStack Row>
                    <MudLink Typo="Typo.body2" DataLabel="Actual File Name" Href="javascript:void(0);" OnClick="@(async () => await DownloadExcel(context.Item))" Underline="Underline.Always">Export</MudLink>
                </MudStack>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
    @*<LoadingContent>
    <MudText Typo="Typo.body2" Class="mt-4 mud-text-secondary font-bold">Loading Customer Communications...</MudText>
    </LoadingContent>*@
    <PagerContent>
        <MudDataGridPager T="CommunicationDTO" Style="font-size: 12px" />
    </PagerContent>
</MudDataGrid>