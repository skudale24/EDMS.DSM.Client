@page "/"

@using EDMS.DSM.Client.DTO;

<MudDataGrid T="CommunicationDTO" MultiSelection="false" Items="@Elements" SortMode="MudBlazor.SortMode.Single" Filterable="true"
             QuickFilter="@_quickFilter" Loading="@isLoading"
             Hideable="false" RowClick="@RowClicked" SelectedItemsChanged="@SelectedItemsChanged"
             Striped="true" ShowFilterIcons="true" FixedHeader="true" Height="520px">
    <ToolBarContent>
        <MudItem xs="12" sm="12" md="12" lg="12" xl="12">
            <MudText Typo="Typo.h6">Tools: HUP Customer Communication</MudText>
        </MudItem>
        <MudSpacer />
        <MudTextField @bind-Value="_searchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="true"
                      AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>

    @*<HeaderCell Class="font-bold"></HeaderCell>*@
    <ColGroup>
        <col style="width:15%;" />
        <col style="width:15%;" />
        <col style="width:15%;" />
        <col style="width:20%;" />
        <col style="width:20%;" />
        <col />
    </ColGroup>
    <Columns>
        <PropertyColumn Property="x => x.TemplateName" Title="Letter Type" HeaderStyle="--tw-bg-opacity: 1;background-color: rgb(168 162 158 / var(--tw-bg-opacity));">
            <HeaderTemplate>
                <span style="font-weight:normal" class="text-white">Letter Type</span>
            </HeaderTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.CompanyName" Title="LPC" HeaderStyle="--tw-bg-opacity: 1;background-color: rgb(168 162 158 / var(--tw-bg-opacity));">
            <HeaderTemplate>
                <span style="font-weight:normal" class="text-white">LPC</span>
            </HeaderTemplate>
        </PropertyColumn>
        <TemplateColumn Title="Action" Filterable="false" Sortable="false" HeaderStyle="--tw-bg-opacity: 1;background-color: rgb(168 162 158 / var(--tw-bg-opacity));">
            <HeaderTemplate>
                <span style="font-weight:normal" class="text-white">Action</span>
            </HeaderTemplate>
            <CellTemplate>
                <MudStack Row>
                    @if (context.Item?.IsProcessing == true)
                    {
                        <MudProgressLinear Color="Color.Primary" Class="text-green-600" Style="text-green-600" Indeterminate="true">
                        </MudProgressLinear>
                    }
                    @if (context.Item?.IsProcessing == false)
                    {
                        if (context.Item?.Action?.StartsWith("Generate") == true)
                        {
                            <MudLink DataLabel="Actual File Name" Href="javascript:void(0);" OnClick="@(async () => await ProcessLetterGeneration(context.Item))" Underline="Underline.Always">@context.Item.Action</MudLink>
                        }
                        else
                        {
                            <MudLink DataLabel="Actual File Name" Href="javascript:void(0);" OnClick="@(async () => await DownloadSourceFile("20230425_CC_NoticeofIneligibility.pdf"))" Underline="Underline.Always">@context.Item.Action</MudLink>
                        }
                    }
                    @*<div style="display:@(context.Item.IsProcessing ? "block" : "none")"></div>*@
                </MudStack>
            </CellTemplate>
        </TemplateColumn>
        <PropertyColumn Property="x => x.GeneratedDate" Title="Letter Generated Date" HeaderStyle="--tw-bg-opacity: 1;background-color: rgb(168 162 158 / var(--tw-bg-opacity));">
            <HeaderTemplate>
                <span style="font-weight:normal" class="text-white">Letter Generated Date</span>
            </HeaderTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.GeneratedBy" Title="Letter Generated by" HeaderStyle="--tw-bg-opacity: 1;background-color: rgb(168 162 158 / var(--tw-bg-opacity));">
            <HeaderTemplate>
                <span style="font-weight:normal" class="text-white">Letter Generated by</span>
            </HeaderTemplate>
        </PropertyColumn>
        <TemplateColumn CellClass="d-flex justify-center" Title="Customer List" Filterable="false" Sortable="false" CellStyle="text-align: center;" HeaderStyle="--tw-bg-opacity: 1;background-color: rgb(168 162 158 / var(--tw-bg-opacity));"s>
            <HeaderTemplate>
                <span style="font-weight:normal" class="text-white">Customer List</span>
            </HeaderTemplate>
            <CellTemplate>
                <MudStack Row>
                    <MudLink DataLabel="Actual File Name" Href="javascript:void(0);" OnClick="@(async () => await DownloadSourceFile("Customer_List_Maryville_Electric_Department.xlsx"))" Underline="Underline.Always">Export</MudLink>
                </MudStack>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
    <LoadingContent>
        <MudText Typo="Typo.body2" Class="mt-4 mud-text-secondary">Loading Communications...</MudText>
    </LoadingContent>
    <PagerContent>
        <MudDataGridPager T="CommunicationDTO" />
    </PagerContent>
</MudDataGrid>

@*
<div class="d-flex flex-wrap mt-4">
    <MudSwitch @bind-Checked="@_sortNameByLength" Color="Color.Primary">Sort Name Column By Length</MudSwitch>
</div>

<MudExpansionPanels Style="flex:1">
    <MudExpansionPanel Text="Show Events">
        @foreach (var message in _events)
        {
            <MudText Typo="@Typo.body2">@message</MudText>
        }
        @if (_events.Count > 0)
        {
            <div class="d-flex">
                <MudSpacer />
                <MudButton Class="mt-3" ButtonType="MudBlazor.ButtonType.Button" Variant="Variant.Filled" OnClick="@(() => _events.Clear())">Clear</MudButton>
            </div>
        }
    </MudExpansionPanel>
</MudExpansionPanels>*@
