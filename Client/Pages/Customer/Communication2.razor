@page "/"

@using System.Net.Http.Json
@using MudBlazor
@using EDMS.DSM.Client.Dto;

@inject HttpClient httpClient
@inject ISnackbar Snackbar

<MudTable Items="@Elements" SortLabel="Sort By" CommitEditTooltip="Commit Edit" FixedHeader="true" Loading="@isLoading">
    <ToolBarContent>
        <MudText Typo="Typo.h6" Class="font-bold text-red-500 text-2xl">Tools: HUP Customer Communication</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="_searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <ColGroup>
        <col style="width:20%;" />
        <col style="width:20%;" />
        <col style="width:15%;" />
        <col style="width:15%;" />
        <col style="width:15%;" />
        <col />
    </ColGroup>
    <HeaderContent>
        <MudTh><MudTableSortLabel SortBy="new Func<CommunicationDto, object>(x=>x.TemplateName)" Class="font-bold">Letter Type</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<CommunicationDto, object>(x=>x.CompanyName)" Class="font-bold">LPC</MudTableSortLabel></MudTh>
        <MudTh><span Class="font-bold">Action</span></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<CommunicationDto, object>(x=>x.GeneratedDate)" Class="font-bold">Letter Generated Date</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<CommunicationDto, object>(x=>x.GeneratedBy)" Class="font-bold">Letter Generated by</MudTableSortLabel></MudTh>
        <MudTh><span Class="font-bold">Customer List</span></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Nr">@context.TemplateName</MudTd>
        <MudTd DataLabel="Sign">@context.CompanyName</MudTd>
        <MudTd DataLabel="Name">
            <MudStack Row>
                @if (context.IsProcessing == true)
                {
                    <MudProgressLinear Color="Color.Primary" Class="text-green-600" Style="text-green-600" Indeterminate="true">
                    </MudProgressLinear>
                }
                @if (context.IsProcessing == false)
                {
                    if (context.Action?.StartsWith("Generate") == true)
                    {
                        <MudLink DataLabel="Actual File Name" Href="javascript:void(0);" OnClick="@(async () => await ProcessLetterGeneration(context))" Underline="Underline.Always">@context.Action</MudLink>
                    }
                    else
                    {
                        <MudLink DataLabel="Actual File Name" Href="javascript:void(0);" OnClick="@(async () => await DownloadSourceFile("20230425_CC_NoticeofIneligibility.pdf"))" Underline="Underline.Always">@context.Action</MudLink>
                    }
                }
                @*<div style="display:@(context.Item.IsProcessing ? "block" : "none")"></div>*@
            </MudStack>
        </MudTd>
        <MudTd DataLabel="Position">@context.GeneratedDate</MudTd>
        <MudTd DataLabel="Molar mass">@context.GeneratedBy</MudTd>
        <MudTd>
            <MudStack Row>
                <MudLink DataLabel="Actual File Name" Href="javascript:void(0);" OnClick="@(async () => await DownloadSourceFile("Customer_List_Maryville_Electric_Department.xlsx"))" Underline="Underline.Always">Export</MudLink>
            </MudStack>
        </MudTd>
    </RowTemplate>
    <LoadingContent>
        <MudText Typo="Typo.body2" Class="mt-4 mud-text-secondary">Loading Communications...</MudText>
    </LoadingContent>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
    <EditButtonContent Context="button">
        <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" Class="pa-0" OnClick="@button.ButtonAction" Disabled="@button.ButtonDisabled" />
    </EditButtonContent>
</MudTable>