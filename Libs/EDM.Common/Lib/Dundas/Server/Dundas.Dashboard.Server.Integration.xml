<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dundas.Dashboard.Server.Integration</name>
    </assembly>
    <members>
        <member name="T:Dundas.Dashboard.Integration.Administration.ApplicationLicenseUsage">
            <summary>
            Information about the application's license usage.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.ApplicationLicenseUsage.#ctor">
            <summary>
            Private default constructor.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.ApplicationLicenseUsage.#ctor(Dundas.Dashboard.Integration.Services.ApplicationLicenseUsageData)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.Administration.ApplicationLicenseUsage"/> class from its data contract.
            </summary>
            <param name="dataContract">The data contract.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.ApplicationLicenseUsage.Get">
            <summary>
            Gets the application's license usage.
            </summary>
            <returns>The application's license usage.</returns>
            <remarks>A session with administrative privileges is required for this method.</remarks>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.ApplicationLicenseUsage.MaxDashboardDesignerAccounts">
            <summary>
            Gets the maximum number of DashboardDesigner accounts.
            </summary>
            <value>The number of DashboardDesigner accounts.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.ApplicationLicenseUsage.DashboardDesignerAccounts">
            <summary>
            Gets the number of existing DashboardDesigner accounts.
            </summary>
            <value>The number of existing DashboardDesigner accounts.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.ApplicationLicenseUsage.MaxDashboardDeveloperAccounts">
            <summary>
            Gets the maximum number of DashboardDeveloper accounts.
            </summary>
            <value>The number of DashboardDeveloper accounts.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.ApplicationLicenseUsage.DashboardDeveloperAccounts">
            <summary>
            Gets the number of existing DashboardDeveloper accounts.
            </summary>
            <value>The number of existing DashboardDeveloper accounts.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.ApplicationLicenseUsage.MaxViewerSessions">
            <summary>
            Gets the maximum number of sessions that are permitted to view dashboards.
            </summary>
            <value>The number of viewer sessions.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.ApplicationLicenseUsage.NamedViewerAccounts">
            <summary>
            Gets the number of existing NamedViewer accounts.
            </summary>
            <value>The number of existing NamedViewer accounts.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.ApplicationLicenseUsage.ViewerSessionCount">
            <summary>
            Gets the number of Viewer sessions.
            </summary>
            <value>The number of viewer sessions.</value>
        </member>
        <member name="T:Dundas.Dashboard.Framework.BookmarkType">
            <summary>
            Defines the type of a bookmark.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Framework.BookmarkType.Normal">
            <summary>
            Regular bookmark.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Framework.BookmarkType.Hidden">
            <summary>
            Bookmark created by the application and meant to be used internally.
            </summary>
        </member>
        <member name="T:Dundas.Dashboard.Integration.Business.DashboardFilterValueData">
            <exclude />
        </member>
        <member name="M:Dundas.Dashboard.Integration.Business.DashboardFilterValueData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.Business.DashboardFilterValueData"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Business.DashboardFilterValueData.SerializingConstructor(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Called when de-serialization occurs as this instance is marked with data contract.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.DashboardFilterValueData.IsConsolidatedDateTime">
            <summary>
            Gets or sets a value indicating whether this instance is consolidated date time.
            </summary>
            <value>
            <see langword="true"/> if this instance is consolidated date time; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.DashboardFilterValueData.IsRange">
            <summary>
            Gets or sets a value indicating whether this instance is range.
            </summary>
            <value><see langword="true"/> if this instance is range; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.DashboardFilterValueData.MemberValues">
            <summary>
            Gets or sets the member values.
            </summary>
            <value>The member values.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.DashboardFilterValueData.NamedTokenOffset">
            <summary>
            Gets or sets the named token offset.
            </summary>
            <value>The named token offset.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.DashboardFilterValueData.NamedTokenValue">
            <summary>
            Gets or sets the named token value.
            </summary>
            <value>The named token value.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.DashboardFilterValueData.SingleValue">
            <summary>
            Gets or sets the value of a single-value filter.
            </summary>
            <value>The value.</value>
            <remarks>
            For "set" the <see langword="null"/> value will be treated as "ALL" and
            DBNull as "NULL".
            When the <see cref="!:DashboardFileterValueData"/> class is referenced from
            the Integration assembly named tokens are not supported and will result in
            <see cref="T:System.InvalidOperationException"/> exception.
            </remarks>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.DashboardFilterValueData.DateRangeStart">
            <summary>
            Gets the date range start.
            </summary>
            <value>The date range start.</value>
            <remarks>
            When the <see cref="!:DashboardFileterValueData"/> class is referenced from
            the Integration assembly named tokens are not supported and will result in
            <see cref="T:System.InvalidOperationException"/> exception.
            </remarks>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.DashboardFilterValueData.DateRangeEnd">
            <summary>
            Gets the date range end.
            </summary>
            <value>The date range end.</value>
            <remarks>
            When the <see cref="!:DashboardFileterValueData"/> class is referenced from
            the Integration assembly named tokens are not supported and will result in
            <see cref="T:System.InvalidOperationException"/> exception.
            </remarks>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.DashboardFilterValueData.RangeStart">
            <summary>
            Gets the range start.
            </summary>
            <value>
            The range start.
            </value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.DashboardFilterValueData.RangeEnd">
            <summary>
            Gets the range end.
            </summary>
            <value>
            The range end.
            </value>
        </member>
        <member name="T:Dundas.Dashboard.Integration.Business.DashboardMemberValueData">
            <exclude />
        </member>
        <member name="M:Dundas.Dashboard.Integration.Business.DashboardMemberValueData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.Business.DashboardMemberValueData"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Business.DashboardMemberValueData.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.Business.DashboardMemberValueData"/> class.
            </summary>
            <param name="value">The value to add.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Business.DashboardMemberValueData.SerializingConstructor(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Called when de-serialization occurs as this instance is marked with data contract.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.DashboardMemberValueData.DateTimeGrain">
            <summary>
            Gets or sets the date time grain.
            </summary>
            <value>The date time grain.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.DashboardMemberValueData.HierarchyLevel">
            <summary>
            Gets or sets the hierarchy level.
            </summary>
            <value>The hierarchy level.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.DashboardMemberValueData.NamedTokenOffset">
            <summary>
            Gets or sets the named token offset.
            </summary>
            <value>The named token offset.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.DashboardMemberValueData.NamedTokenValue">
            <summary>
            Gets or sets the named token value.
            </summary>
            <value>The named token value.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.DashboardMemberValueData.Operator">
            <summary>
            Gets or sets the operator.
            </summary>
            <value>The operator.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.DashboardMemberValueData.ReadableValues">
            <summary>
            Gets the readable values. These are values that must be set by anything which sets the <see cref="P:Dundas.Dashboard.Integration.Business.DashboardMemberValueData.Values"/> if it is to be used.
            The purpose here is to provide a human-readable value to the script engine in case the user wishes to print out the values
            of this parameter.
            </summary>
            <value>The readable values.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.DashboardMemberValueData.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.DashboardMemberValueData.Values">
            <summary>
            Gets the values.
            </summary>
            <value>The values.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.DashboardMemberValueData.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Object"/> at the specified index.
            </summary>
            <value>The value at the specified index, or <see langword="null"/> if none exists.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.DashboardMemberValueData.StringValue">
            <summary>
            Gets the string value.
            </summary>
            <value>
            The string value.
            </value>
        </member>
        <member name="T:Dundas.Dashboard.Utility.DashboardQueryString">
            <summary>
            Provides the core functionality for generating and parsing URLs to Dundas Dashboard objects.
            </summary>    
        </member>
        <member name="M:Dundas.Dashboard.Utility.DashboardQueryString.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Utility.DashboardQueryString"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Utility.DashboardQueryString.Parse(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Parses the query string information from a set of query string or init params key/value pairs.
            </summary>
            <param name="data">The key/value pairs to use.</param>
            <returns>A <see cref="T:DashboardQueryString"/> instance containing the parsed data.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Utility.DashboardQueryString.ToKeyValuePairs">
            <summary>
            Converts this <see cref="T:DashboardQueryString"/> instance to a set of key/value pairs which can be used to generate a query string.
            </summary>
            <returns>The key value pairs.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Utility.DashboardQueryString.GetViewUri">
            <summary>
            Gets a Uri that can be used to view this dashboard.
            </summary>
            <returns>The Uri.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Utility.DashboardQueryString.GetViewUri(System.Uri)">
            <summary>
            Gets a Uri that can be used to view this dashboard.
            </summary>
            <param name="uri">The Uri to base this view Uri off of.</param>
            <returns>The Uri.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Utility.DashboardQueryString.GetViewUri(System.Uri,System.Boolean,System.Boolean)">
            <summary>
            Gets a Uri that can be used to view this dashboard.
            </summary>
            <param name="uri">The Uri to base this view Uri off of.</param>
            <param name="preserveQueryString">if set to <see langword="true"/> the generated uri will preserve all of the query string data of the original uri.</param>
            <param name="isHtmlLink">if set to <see langword="true"/>, the link generated will be for HTML if no Uri is specified.</param>
            <returns>The Uri.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Utility.DashboardQueryString.GetLinkUri(System.Uri,System.Guid,Dundas.Dashboard.ViewerContentItemType,System.String,System.Boolean)">
            <summary>
            Gets a link to a dashboard object.
            </summary>
            <param name="baseUri">The base URI.</param>
            <param name="contentId">The id of the item.</param>
            <param name="contentType">Type of the content.</param>
            <param name="parameterData">The parameter data.</param>
            <param name="preserveQueryString">if set to <see langword="true"/> the query string data of the generated uri is merged with the query string data of the base uri.</param>
            <returns>The link URI.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Utility.DashboardQueryString.GetLinkUri(System.Uri,System.Guid,Dundas.Dashboard.ViewerContentItemType,Dundas.Dashboard.Integration.Business.ParameterInfoCollection,System.Boolean)">
            <summary>
            Gets the link URI.
            </summary>
            <param name="baseUri">The base URI.</param>
            <param name="contentId">The content id.</param>
            <param name="contentType">Type of the content.</param>
            <param name="parameters">The parameters.</param>
            <param name="preserveQueryString">if set to <see langword="true"/> the query string data of the generated uri is merged with the query string data of the base uri.</param>
            <returns>The link URI.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Utility.DashboardQueryString.GetHtmlLinkUri(System.Uri,System.Guid,Dundas.Dashboard.ViewerContentItemType,Dundas.Dashboard.Integration.Business.ParameterInfoCollection,System.Boolean,System.Guid,System.Boolean)">
            <summary>
            Gets the HTML link URI.
            </summary>
            <param name="baseUri">The base URI.</param>
            <param name="contentId">The content id.</param>
            <param name="contentType">Type of the content.</param>
            <param name="parameters">The parameters.</param>
            <param name="preserveQueryString">if set to <see langword="true"/> the query string data of the generated uri is merged with the query string data of the base uri.</param>
            <param name="sessionId">The session id.</param>
            <param name="isPreview">if set to <see langword="true"/>, then we need a preview link.</param>
            <returns>The link URI.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Utility.DashboardQueryString.GetLinkUri(System.Uri,System.Guid,Dundas.Dashboard.ViewerContentItemType,Dundas.Dashboard.Integration.Business.ParameterInfoCollection,System.Boolean,System.Boolean,System.Guid,System.Boolean)">
            <summary>
            Gets the link URI.
            </summary>
            <param name="baseUri">The base URI.</param>
            <param name="contentId">The content id.</param>
            <param name="contentType">Type of the content.</param>
            <param name="parameters">The parameters.</param>
            <param name="preserveQueryString">if set to <see langword="true"/> the query string data of the generated uri is merged with the query string data of the base uri.</param>
            <param name="isHtmlLink">if set to <see langword="true"/> this is an HTML link.</param>
            <param name="sessionId">The session id.</param>
            <param name="isPreview">if set to <see langword="true"/>, this is a preview.</param>
            <returns>The link URI.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Utility.DashboardQueryString.GetLinkUri(System.Uri,System.Guid,Dundas.Dashboard.ViewerContentItemType,Dundas.Dashboard.Integration.Business.ParameterInfoCollection,System.Boolean,System.Boolean,System.Guid,System.Boolean,System.Boolean)">
            <summary>
            Gets the link URI.
            </summary>
            <param name="baseUri">The base URI.</param>
            <param name="contentId">The content id.</param>
            <param name="contentType">Type of the content.</param>
            <param name="parameters">The parameters.</param>
            <param name="preserveQueryString">if set to <see langword="true"/> the query string data of the generated uri is merged with the query string data of the base uri.</param>
            <param name="isHtmlLink">if set to <see langword="true"/> this is an HTML link.</param>
            <param name="sessionId">The session id.</param>
            <param name="isPreview">if set to <see langword="true"/>, this is a preview.</param>
            <param name="preserveViewerFeatures">if set to <see langword="true"/> the Dd_ViewerFeatures query string is not overwritten.</param>
            <returns>The link URI.</returns>
        </member>
        <member name="P:Dundas.Dashboard.Utility.DashboardQueryString.ContentId">
            <summary>
            Gets or sets the content id.
            </summary>
            <value>The content id.</value>
        </member>
        <member name="P:Dundas.Dashboard.Utility.DashboardQueryString.ContentType">
            <summary>
            Gets or sets the type of the content.
            </summary>
            <value>The type of the content.</value>
        </member>
        <member name="P:Dundas.Dashboard.Utility.DashboardQueryString.IsImageAutoCreated">
            <summary>
            Gets or sets a value indicating whether this instance should auto create an image.
            </summary>
            <value>
            <see langword="true"/> if this instance should auto create an image; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Dundas.Dashboard.Utility.DashboardQueryString.IsImageAutoCreatedTimeStampShown">
            <summary>
            Gets or sets a value indicating whether this instance shows a timestamp on auto generated images.
            </summary>
            <value>
            <see langword="true"/> if this instance has a timestamp on auto generated images; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Dundas.Dashboard.Utility.DashboardQueryString.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Dundas.Dashboard.Utility.DashboardQueryString.ViewerFeatures">
            <summary>
            Gets or sets the viewer features.
            </summary>
            <value>The viewer features.</value>
        </member>
        <member name="P:Dundas.Dashboard.Utility.DashboardQueryString.SessionId">
            <summary>
            Gets or sets the session id.
            </summary>
            <value>
            The session id.
            </value>
        </member>
        <member name="P:Dundas.Dashboard.Utility.DashboardQueryString.IsPreview">
            <summary>
            Gets the is preview.
            </summary>
        </member>
        <member name="P:Dundas.Dashboard.Utility.DashboardQueryString.DefaultFolderId">
            <summary>
            Gets or sets the id of the folder that will be initially selected in the navigation bar when the viewer is loaded.
            </summary>
            <value>The default folder id.</value>
        </member>
        <member name="P:Dundas.Dashboard.Utility.DashboardQueryString.ShortLinkId">
            <summary>
            Gets or sets the short link id.
            </summary>
            <value>The short link id.</value>
        </member>
        <member name="P:Dundas.Dashboard.Utility.DashboardQueryString.Culture">
            <summary>
            Gets or sets the culture.
            </summary>
            <value>The culture.</value>
        </member>
        <member name="P:Dundas.Dashboard.Utility.DashboardQueryString.QueryUserName">
            <summary>
            Gets or sets the QueryString UserName.
            </summary>
            <value>Query String UserName.</value>
        </member>
        <member name="P:Dundas.Dashboard.Utility.DashboardQueryString.QueryPassword">
            <summary>
            Gets or sets the QueryString User Password.
            </summary>
            <value>Query String Password.</value>
        </member>
        <member name="T:Dundas.Dashboard.Integration.Business.ParameterInfo">
            <summary>
            Contains information for passing parameters to the viewer for performance dashboard.
            </summary>    
        </member>
        <member name="T:Dundas.Dashboard.Integration.Business.ParameterInfoBase">
            <summary>
            Contains information for passing parameters to the viewer.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Business.ParameterInfoBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.Business.ParameterInfoBase"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Business.ParameterInfoBase.BaseSerializingConstructor(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Called when de-serialization occurs as this instance is marked with data contract.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.ParameterInfoBase.ContentItemId">
            <summary>
            Gets or sets the content item id. This is the id of the content item within the enhanced viewer that this
            parameter applies to.
            </summary>
            <value>The content item id.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.ParameterInfoBase.ParameterName">
            <summary>
            Gets or sets the name of the parameter that this info acts on. As of version 2.5, this will be the
            <see cref="T:Dundas.Dashboard.Business.DashboardParameter"/> for <see cref="T:Dundas.Dashboard.Integration.Business.ParameterInfo"/>, and the <see cref="T:Dundas.Dashboard.DashboardControls.Extensibility.DashboardAnalyticalControl"/>
            for <see cref="T:Dundas.Dashboard.Integration.Business.AnalyticalParameterInfo"/> or the <see cref="T:Dundas.Dashboard.Business.DashboardParameter"/> (for FilterlessValue). Please note that if a dashboard has an
            analytical control and a parameter with the same name, unexpected results can occur.
            </summary>
            <value>The name of the parameter that this info acts on.</value>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Business.ParameterInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.Business.ParameterInfo"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Business.ParameterInfo.SerializingConstructor(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Called when de-serialization occurs as this instance is marked with data contract.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.ParameterInfo.FilterlessValue">
            <summary>
            Gets the filterless value. This is a value that can be used if filters are not enabled to pass values to/from
            a dashboard.
            </summary>
            <value>The filterless value.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.ParameterInfo.FilterValues">
            <summary>
            Gets the filter values.
            </summary>
            <value>The filter values.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.ParameterInfo.FormulaValue">
            <summary>
            Gets or sets the formula parameter value. This is the value to set on the formula when this parameter is acting
            on a formula.
            </summary>
            <value>The formula value.</value>
            <remarks>The value can be an int, a double, a boolean or string.</remarks>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.ParameterInfo.GrainLevel">
            <summary>
            Gets or sets the default level to be used in rendering a full dimension attributes.
            </summary>
            <value>The grain level.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.ParameterInfo.DateOffset">
            <summary>
            Gets or sets the date offset.
            </summary>
            <value>The date offset.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.ParameterInfo.DateOffsetGrain">
            <summary>
            Gets or sets the date offset grain.
            </summary>
            <value>The date offset grain.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.ParameterInfo.IsValueSelectionInverted">
            <summary>
            Gets or sets a value indicating whether a logical NOT is applied to the filter value selection.
            </summary>
            <value>
            <see langword="true"/> if a logical NOT is applied to the filter value selection; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.ParameterInfo.ValueLevelFilter">
            <summary>
            Gets or sets the value hierarchy level.
            </summary>
            <value>The value hierarchy level.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.ParameterInfo.ValueLevelAxis">
            <summary>
            Gets or sets the value hierarchy grain.
            </summary>
            <value>The value hierarchy grain.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.ParameterInfo.ValueEndCollection">
            <summary>
            Gets or sets the values of where the user selected range ends.
            </summary>
            <value>The values of where the user selected range ends.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.ParameterInfo.ValueStartCollection">
            <summary>
            Gets or sets the values of where the user selected range starts.
            </summary>
            <value>The values of where the user selected range starts.</value>
        </member>
        <member name="T:Dundas.Dashboard.Integration.Business.ParameterInfoCollection">
            <summary>
            The collection of ParameterInfo objects.
            </summary>    
        </member>
        <member name="M:Dundas.Dashboard.Integration.Business.ParameterInfoCollection.SerializeToString">
            <summary>
            Serializes the parameters to a string.
            </summary>
            <returns>The serialized data.</returns>        
        </member>
        <member name="M:Dundas.Dashboard.Integration.Business.ParameterInfoCollection.Parse(System.String)">
            <summary>
            Creates an instance of this class from query string data.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Business.ParameterInfoCollection.SerializeToXElement">
            <summary>
            Serializes the parameters to a XElement.
            </summary>
            <returns>The serialized data.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Business.ParameterInfoCollection.DeserializeFromString(System.String)">
            <summary>
            Deserializes from string.
            </summary>
            <param name="data">The data.</param>
            <returns>The deserialized object.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Business.ParameterInfoCollection.DeserializeFromXElement(System.Xml.Linq.XElement)">
            <summary>
            Deserializes from XElement.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Business.ParameterInfoCollection.GetKnownSerializerTypes">
            <summary>
            Gets the known serializer types.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Business.ParameterInfoCollection.CreateSerializer">
            <summary>
            Creates the serializer.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Dundas.Dashboard.CompressedBinaryEncodingElement.CompressedMessageEncoder.MIN_SIZE_FOR_COMPRESSION">
            <summary>
            Don't waste time compressing small messages.
            </summary>
        </member>
        <member name="T:Dundas.Dashboard.DashboardControls.Extensibility.AnalyticalChartFormulaInfo">
            <summary>
            Formula info for visualization controls.
            </summary>
        </member>
        <member name="T:Dundas.Dashboard.DashboardControls.Extensibility.AnalyticalFormulaInfo">
            <summary>
            Formula info for visualization controls.
            </summary>
        </member>
        <member name="P:Dundas.Dashboard.DashboardControls.Extensibility.AnalyticalFormulaInfo.SeriesName">
            <summary>
            Gets or sets the name of the series.
            </summary>
            <value>
            The name of the series.
            </value>
        </member>
        <member name="P:Dundas.Dashboard.DashboardControls.Extensibility.AnalyticalChartFormulaInfo.VisualizerIds">
            <summary>
            Gets or sets the visualizer ids.
            </summary>
            <value>The visualizer ids.</value>
        </member>
        <member name="T:Dundas.Dashboard.DashboardControls.Extensibility.AnalyticalChartBookmark">
            <summary>
            AnalyticalChart Bookmark.
            </summary>
        </member>
        <member name="P:Dundas.Dashboard.DashboardControls.Extensibility.AnalyticalChartBookmark.ChartMappings">
            <summary>
            Gets or sets the chart mappings.
            </summary>
            <value>The chart mappings.</value>
        </member>
        <member name="P:Dundas.Dashboard.DashboardControls.Extensibility.AnalyticalChartBookmark.FormulaInfo">
            <summary>
            Gets or sets the formula info.
            </summary>
            <value>
            The formula info.
            </value>
        </member>
        <member name="T:Dundas.Dashboard.DashboardControls.Extensibility.AnalyticalComboBookmark">
            <summary>
            AnalyticalCombo Bookmark.
            </summary>
        </member>
        <member name="P:Dundas.Dashboard.DashboardControls.Extensibility.AnalyticalComboBookmark.VirtualReportId">
            <summary>
            Gets or sets the virtual report id.
            </summary>
            <value>The virtual report id.</value>
        </member>
        <member name="P:Dundas.Dashboard.DashboardControls.Extensibility.AnalyticalComboBookmark.Report">
            <summary>
            Gets or sets the report.
            </summary>
            <value>The report.</value>
        </member>
        <member name="P:Dundas.Dashboard.DashboardControls.Extensibility.AnalyticalComboBookmark.ChartBookmark">
            <summary>
            Gets or sets the chart mappings.
            </summary>
            <value>The chart mappings.</value>
        </member>
        <member name="P:Dundas.Dashboard.DashboardControls.Extensibility.AnalyticalComboBookmark.ActiveTab">
            <summary>
            Gets or sets the active tab.
            </summary>
            <value>The active tab.</value>
        </member>
        <member name="T:Dundas.Dashboard.DashboardControls.Extensibility.AnalyticalReportCustomization">
            <summary>
            Analythical report customization.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.DashboardControls.Extensibility.AnalyticalReportCustomization.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.DashboardControls.Extensibility.AnalyticalReportCustomization"/> class.
            </summary>
        </member>
        <member name="P:Dundas.Dashboard.DashboardControls.Extensibility.AnalyticalReportCustomization.ReportId">
            <summary>
            Gets or sets the report id.
            </summary>
            <value>The report id.</value>
        </member>
        <member name="P:Dundas.Dashboard.DashboardControls.Extensibility.AnalyticalReportCustomization.VisualizerMeasures">
            <summary>
            Gets or sets the visualizer measures.
            </summary>
            <value>The visualizer measures.</value>
        </member>
        <member name="T:Dundas.Dashboard.DashboardControls.Extensibility.AnalyticalVisualizerMapping">
            <summary>
            The analytical visualizer mapping.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.DashboardControls.Extensibility.AnalyticalVisualizerMapping.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.DashboardControls.Extensibility.AnalyticalVisualizerMapping"/> class.
            </summary>
        </member>
        <member name="P:Dundas.Dashboard.DashboardControls.Extensibility.AnalyticalVisualizerMapping.Id">
            <summary>
            Gets or sets the object id.
            </summary>
            <value>
            The object id.
            </value>
        </member>
        <member name="P:Dundas.Dashboard.DashboardControls.Extensibility.AnalyticalVisualizerMapping.VisualizerId">
            <summary>
            Gets or sets the visualizer id.
            </summary>
            <value>The visualizer id.</value>
        </member>
        <member name="P:Dundas.Dashboard.DashboardControls.Extensibility.AnalyticalVisualizerMapping.Measures">
            <summary>
            Gets or sets the measures.
            </summary>
            <value>The measures.</value>
        </member>
        <member name="P:Dundas.Dashboard.DashboardControls.Extensibility.AnalyticalVisualizerMapping.FormulaResultIndex">
            <summary>
            Gets or sets the index of the formula result.
            </summary>
            <value>
            The index of the formula result.
            </value>
        </member>
        <member name="P:Dundas.Dashboard.DashboardControls.Extensibility.AnalyticalVisualizerMapping.VisualProperties">
            <summary>
            Gets or sets the visual properties.
            </summary>
            <value>The visual properties.</value>
        </member>
        <member name="T:Dundas.Dashboard.Business.TokenDescriptorConverter">
            <summary>
            Converter class for the <see cref="T:Dundas.Dashboard.Business.TokenDescriptor"/>.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Business.TokenDescriptorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Dundas.Dashboard.Business.TokenDescriptorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Dundas.Dashboard.KeyValuePairKeys">
            <summary>
            Constants referring to keys in FileSystemEntry KeyValues.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.IsStub">
            <summary>
            The stubbing status for a data object.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.Description">
            <summary>
            The Description of a Business object.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.MoreInfoUri">
            <summary>
            Link to more info about the Business object.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.Thumbnail">
            <summary>
            A thumbnail of the item.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.TileClickTargetID">
            <summary>
            The click target ID for a tile.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.TileClickTargetName">
            <summary>
            The click target name for a tile.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.TileColumnSpan">
            <summary>
            The tile column span.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.TileRowSpan">
            <summary>
            The tile row span.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.TileIsInteractive">
            <summary>
            The tile is interactive.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.TileIsProtected">
            <summary>
            The tile is protected.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.DataCacheClientDuration">
            <summary>
            The amount of time to cache data on the client in minutes.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.DataCacheClientPreviewEnabled">
            <summary>
            Indicates if the client data cache should be used during preview.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.DataCacheClientViewEnabled">
            <summary>
            Indicates if the client data cache should be used during view.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.DataCacheServerDuration">
            <summary>
            The amount of time to cache data on the server in minutes.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.DataCacheServerPreviewEnabled">
            <summary>
            Indicates if the server data cache should be used during preview.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.DataCacheServerViewEnabled">
            <summary>
            Indicates if the server data cache should be used during view.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.ViewerLoadingScreenDelay">
            <summary>
            Specifies the amount of time that has to elapse before this dashboard will show the loading screen.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.ViewerHideInViewer">
            <summary>
            Specifies if the object should be hidden in the viewer's ribbon, and all other navigation.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.ViewerHideInRibbonOnly">
            <summary>
            Specifies that the object should be hidden in the ribbon only (not any other nav).
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.ViewerHideDashBlockFrame">
            <summary>
            Specifies the dash block frame should be hidden.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.KpiMaxValue">
            <summary>
            A Kpi maximum contextual value.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.KpiMinValue">
            <summary>
            A Kpi minimum contextual value.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.MobileOptions">
            <summary>
            The key which holds the mobile options object.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.DataConnectorSupportedStructures">
            <summary>
            Native structures supported by the data connector.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.DataConnectorTableCount">
            <summary>
            Number of discovered tables.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.DataConnectorViewCount">
            <summary>
            Number of discovered views.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.DataConnectorFunctionCount">
            <summary>
            Number of discovered functions.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.DataConnectorStoredProcedureCount">
            <summary>
            Number of discovered stored procedures.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.KeyValuePairKeys.DataConnectorTabularStructureCount">
            <summary>
            Number of discovered tabular structures.
            </summary>
        </member>
        <member name="T:Dundas.Dashboard.IEnumerable_1_Extensions">
            <summary>
            Defines extension methods for <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.IEnumerable_1_Extensions.GenerateUniqueName``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Func{``0,System.String,System.Boolean})">
            <summary>
            Generates a unique name within a collection of items.
            </summary>
            <typeparam name="T">The type of the item in the collection.</typeparam>
            <param name="items">The collection items that the name should be unique in.</param>
            <param name="stem">The base of the name.</param>
            <param name="existsPredicate">The predicate that determines if the collection already contains an item with a given name.</param>
            <returns>A unique name -or- the stem if no unique name could be found.</returns>
        </member>
        <member name="M:Dundas.Dashboard.IEnumerable_1_Extensions.GenerateUniqueName``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,System.Func{``0,System.String,System.Boolean})">
            <summary>
            Generates a unique name within a collection of items.
            </summary>
            <typeparam name="T">The type of the item in the collection.</typeparam>
            <param name="items">The collection items that the name should be unique in.</param>
            <param name="stem">The base of the name.</param>
            <param name="format">The format used when generating the names. See remarks.</param>
            <param name="existsPredicate">The predicate that determines if the collection already contains an item with a given name.</param>
            <returns>
            A unique name -or- the stem if no unique name could be found.
            </returns>
        </member>
        <member name="M:Dundas.Dashboard.IEnumerable_1_Extensions.GenerateUniqueName``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Int32,System.Int32@,System.Func{``0,System.String,System.Boolean})">
            <summary>
            Generates a unique name within a collection of items.
            </summary>
            <typeparam name="T">The type of the item in the collection.</typeparam>
            <param name="items">The collection items that the name should be unique in.</param>
            <param name="stem">The base of the name.</param>
            <param name="startIndex">The index at which to start generating unique names.</param>
            <param name="indexUsed">The index which was used for the returned name.</param>
            <param name="existsPredicate">The predicate that determines if the collection already contains an item with a given name.</param>
            <returns>A unique name -or- the stem if no unique name could be found.</returns>
        </member>
        <member name="M:Dundas.Dashboard.IEnumerable_1_Extensions.GenerateUniqueName``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Int32,System.Int32@,System.String,System.Func{``0,System.String,System.Boolean})">
            <summary>
            Generates a unique name within a collection of items.
            </summary>
            <typeparam name="T">The type of the item in the collection.</typeparam>
            <param name="items">The collection items that the name should be unique in.</param>
            <param name="stem">The base of the name.</param>
            <param name="startIndex">The index at which to start generating unique names.</param>
            <param name="indexUsed">The index which was used for the returned name.</param>
            <param name="format">The format used when generating the names. See remarks.</param>
            <param name="existsPredicate">The predicate that determines if the collection already contains an item with a given name.</param>
            <returns>
            A unique name -or- the stem if no unique name could be found.
            </returns>
            <remarks>This method uses same rules for name formatting as the <see cref="M:System.String.Format(System.String,System.Object)"/> method.
            The format string must use two placeholders {0} and {1}. First is where the name prefix will go and the second is for the order number in
            case of duplications. The default format string is <b>'{0} ({1})'.</b></remarks>
        </member>
        <member name="M:Dundas.Dashboard.IEnumerable_1_Extensions.Chunks``1(System.Collections.Generic.IEnumerable{``0},System.Int64)">
            <summary>
            Returns chunks of the specified source enumerable.
            Important! If used for LinqToSql query, <paramref name="chunkSize"/> must not be 
            greater than <see cref="!:Constants.MaxSqlParametersNumber"/> minus number of all other 
            filters in the query.
            </summary>
            <example>
            For example, requestedIds are chunked considering the number of entryTypeInts, so that 
            combined they would not exceed Constants.MaxSqlParametersNumber:
            <![CDATA[
            foreach (var chunk in requestedIds.Chunks(Constants.MaxSqlParametersNumber - entryTypeInts.Length))
            {
                var entries =
                    from record in fdc.FileSystemObjects
                    where chunk.Contains(record.ObjectId) &&
                    entryTypeInts.Contains(record.ObjectType)
                    select record;
                collected.AddRange(entries);
            }
            ]]>
            </example>
            <typeparam name="TSource">The type of the source enumerable.</typeparam>
            <param name="source">The source.</param>
            <param name="chunkSize">Size of the chunk.</param>
            <returns>Returns chunks of the specified source enumerable.</returns>
        </member>
        <member name="T:Dundas.Dashboard.Integration.Administration.AdminCommandSummary">
            <summary>
            Class used to return an administration command results.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.AdminCommandSummary.#ctor(Dundas.Dashboard.Integration.Services.AdminCommandSummaryData)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.Administration.AdminCommandSummary"/> class.
            </summary>
            <param name="summaryData">The summary data.</param>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.AdminCommandSummary.FilesToProcess">
            <summary>
            Gets or sets the number of files to process.
            </summary>
            <value>The total number of files.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.AdminCommandSummary.FilesCompleted">
            <summary>
            Gets or sets the number of files the command completed successfully for.
            </summary>
            <value>The number of successfully modified files.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.AdminCommandSummary.FilesSkipped">
            <summary>
            Gets or sets the number of files skipped for the command being invalid to be applied to.
            </summary>
            <value>The number of files skipped.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.AdminCommandSummary.FilesNotCompleted">
            <summary>
            Gets or sets the number of files not completed.
            </summary>
            <value>The number of files not completed.</value>
        </member>
        <member name="T:Dundas.Dashboard.Integration.Administration.Administration">
            <summary>
            Represents the class used to perform administration specific commands.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Administration.DeleteFiles(System.Collections.Generic.Dictionary{System.Guid,System.Object})">
            <summary>
            Deletes all the requested files.
            </summary>
            <param name="fileIdsAndStamps">The file ids and their timestamps.</param>
            <returns>The command summary information.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Administration.CheckinFiles(System.Collections.Generic.Dictionary{System.Guid,System.Object})">
            <summary>
            Checkin all the requested files.
            </summary>
            <param name="fileIdsAndStamps">The file ids and their timestamps.</param>
            <returns>The command summary information.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Administration.UndoFilesCheckout(System.Collections.Generic.Dictionary{System.Guid,System.Object})">
            <summary>
            Undo the checkout for all the requested files.
            </summary>
            <param name="fileIdsAndStamps">The file ids and their filestamps.</param>
            <returns>The command summary information.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Administration.SetFilesPermissions(System.Collections.Generic.Dictionary{System.Guid,System.Object},Dundas.Dashboard.Integration.ObjectAccessRights)">
            <summary>
            Sets the same set of the permissions for all the requested files.
            </summary>
            <param name="fileIdsAndStamps">The file ids and their timestamps.</param>
            <param name="accessRights">The new access rights.</param>
            <returns>The command summary information.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Administration.TransferFileCheckout(System.Collections.Generic.Dictionary{System.Guid,System.Object},System.Guid)">
            <summary>
            Transfers the files checkout to a new selected user.
            </summary>
            <param name="fileIdsAndStamps">The file ids and their timestamps.</param>
            <param name="newOwnerId">The new owner profile id.</param>
            <returns>The command summary information.</returns>
        </member>
        <member name="T:Dundas.Dashboard.Integration.Administration.Project">
            <summary>
            Represents a Dundas Dashboard Project.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Project.Create(System.String)">
            <summary>
            Creates a project.
            </summary>
            <param name="name">The name of the project.</param>
            <returns>An object representing the new project.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Project.Delete(System.Guid)">
            <summary>
            Deletes a project.
            </summary>
            <param name="projectId">The ID of the project to delete.</param>
        </member>
        <member name="T:Dundas.Dashboard.Integration.Administration.Account">
            <summary>
            An entity permitted to use the Dundas Dashboard application.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Account.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.Administration.Account"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Account.SetFrom(Dundas.Dashboard.Integration.Administration.Account)">
            <summary>
            Sets the properties of this instance from another <see cref="T:Dundas.Dashboard.Integration.Administration.Account"/>.
            </summary>
            <param name="sourceAccount">The source account.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Account.ToDataContract">
            <summary>
            Returns a data contract version of the instance.
            </summary>
            <returns>The data contract.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Account.GetInfo">
            <summary>
            Gets a <see cref="T:Dundas.Dashboard.Integration.Administration.AccountInfo"/> object that represents this instance.
            </summary>
            <returns>The <see cref="T:Dundas.Dashboard.Integration.Administration.AccountInfo"/> object.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Account.Save">
            <summary>
            Creates or updates this instance.
            </summary>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Account.Delete(System.Guid)">
            <summary>
            Deletes an <see cref="T:Dundas.Dashboard.Integration.Administration.Account"/> specified by its ID.
            </summary>
            <param name="accountId">The account ID.</param>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Account.GetById(System.Guid)">
            <summary>
            Retrieves an <see cref="T:Dundas.Dashboard.Integration.Administration.Account"/> specified by its ID.
            </summary>
            <param name="accountId">The account ID.</param>
            <returns>The <see cref="T:Dundas.Dashboard.Integration.Administration.Account"/> or <see langword="null"/> if not found.</returns>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Account.GetById(System.Guid,System.Boolean)">
            <summary>
            Retrieves an <see cref="T:Dundas.Dashboard.Integration.Administration.Account"/> specified by its ID.
            </summary>
            <param name="accountId">The account ID.</param>
            <param name="throwIfNotFound">
            If set to <see langword="true"/> throws an exception if the account does not exist; otherwise, returns
            <see langword="null"/> if the account does not exist.
            </param>
            <returns>The <see cref="T:Dundas.Dashboard.Integration.Administration.Account"/>.</returns>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Account.GetByName(System.String)">
            <summary>
            Retrieves an <see cref="T:Dundas.Dashboard.Integration.Administration.Account"/> specified by its name.
            </summary>
            <param name="accountName">The account name.</param>
            <returns>The <see cref="T:Dundas.Dashboard.Integration.Administration.Account"/> or <see langword="null"/> if not found.</returns>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Account.GetByName(System.String,System.Boolean)">
            <summary>
            Retrieves an <see cref="T:Dundas.Dashboard.Integration.Administration.Account"/> specified by its name.
            </summary>
            <param name="accountName">The account name.</param>
            <param name="throwIfNotFound">
            If set to <see langword="true"/> throws an exception if the account does not exist; otherwise, returns
            <see langword="null"/> if the account does not exist.
            </param>
            <returns>The <see cref="T:Dundas.Dashboard.Integration.Administration.Account"/>.</returns>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Account.GetAccounts">
            <summary>
            Gets the non-virtual <see cref="T:Dundas.Dashboard.Integration.Administration.Account"/>s in the Dundas Dashboard application.
            </summary>
            <returns>The accounts.</returns>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Account.SetBasePropertiesFromAccount(Dundas.Dashboard.Integration.Administration.Account)">
            <summary>
            Sets the base properties of this instance from another <see cref="T:Dundas.Dashboard.Integration.Administration.Account"/>.
            </summary>
            <param name="sourceAccount">The source account.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Account.SetBasePropertiesFromDataContract(Dundas.Dashboard.Integration.Services.AccountData)">
            <summary>
            Sets the base properties of this instance from its data contract.
            </summary>
            <param name="dataContract">The data contract.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Account.PopulateDataContract(Dundas.Dashboard.Integration.Services.AccountData)">
            <summary>
            Populates the data contract with the account's base properties.
            </summary>
            <param name="dataContract">The data contract.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Account.AccountFromDataContract(Dundas.Dashboard.Integration.Services.AccountData)">
            <summary>
            Creates an account from its data contract.
            </summary>
            <param name="dataContract">The data contract.</param>
            <returns>The account.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Account.GetAccountByIdOrName(System.Nullable{System.Guid},System.String,System.Boolean)">
            <summary>
            Retrieves an <see cref="T:Dundas.Dashboard.Integration.Administration.Account"/> specified by its ID or name.
            </summary>
            <param name="accountId">The account ID or <see langword="null"/> if not specified.</param>
            <param name="accountName">The account name or <see langword="null"/> if not specified.</param>
            <param name="throwIfNotFound">
            If set to <see langword="true"/> throws an exception if the account does not exist; otherwise, returns
            <see langword="null"/> if the account does not exist.
            </param>
            <returns>The <see cref="T:Dundas.Dashboard.Integration.Administration.Account"/>.</returns>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.Account.Id">
            <summary>
            Gets the account's id.
            </summary>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.Account.AccountType">
            <summary>
            Gets the account's type.
            </summary>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.Account.AccountName">
            <summary>
            Gets or sets the account's name.
            </summary>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.Account.IsEnabled">
            <summary>
            Gets or sets a value indicating whether the account is enabled for use.
            </summary>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.Account.CreatedTime">
            <summary>
            Gets or sets the UTC time the account was created.
            </summary>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.Account.LastLoginTime">
            <summary>
            Gets or sets the UTC time the account last logged in.
            </summary>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.Account.LoginCount">
            <summary>
            Gets or sets the number of times the account has successfully logged in.
            </summary>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.Account.CultureName">
            <summary>
            Gets or sets the name of the culture associated with the account.
            </summary>
            <value>The name of the culture associated with the account, or <see langword="null"/> if the application's default culture should be used.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.Account.CustomAttributes">
            <summary>
            Gets the account's explicitly assigned custom attributes.
            </summary>
            <value>The custom attributes.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.Account.GrantedStandardPrivileges">
            <summary>
            Gets the granted standard privileges.
            </summary>
            <value>The granted standard privileges.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.Account.DeniedStandardPrivileges">
            <summary>
            Gets the denied standard privileges.
            </summary>
            <value>The denied standard privileges.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.Account.Role">
            <summary>
            Gets or sets the account's role.
            </summary>
            <value>The role.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.Account.Groups">
            <summary>
            Gets information about the groups to which the account belongs.
            </summary>
            <value>Information about the groups.</value>
        </member>
        <member name="T:Dundas.Dashboard.Integration.Administration.AccountInfo">
            <summary>
            Information about a Dundas Dashboard account.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.AccountInfo.#ctor(Dundas.Dashboard.Integration.Administration.AccountInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.Administration.AccountInfo"/> class from another instance.
            </summary>
            <param name="source">The source instance.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.AccountInfo.#ctor(Dundas.Dashboard.Integration.Services.AccountInfoData)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.Administration.AccountInfo"/> class from its data contract.
            </summary>
            <param name="dataContract">The data contract.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.AccountInfo.#ctor(Dundas.Dashboard.Integration.Administration.Account)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.Administration.AccountInfo"/> class from an <see cref="T:Dundas.Dashboard.Integration.Administration.Account"/>.
            </summary>
            <param name="account">The account.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.AccountInfo.ToDataContract">
            <summary>
            Returns the instance's data contract.
            </summary>
            <returns>The data contract.</returns>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.AccountInfo.Id">
            <summary>
            Gets the account's id.
            </summary>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.AccountInfo.AccountType">
            <summary>
            Gets the account's type.
            </summary>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.AccountInfo.AccountName">
            <summary>
            Gets the account's name.
            </summary>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.AccountInfo.IsEnabled">
            <summary>
            Gets a value indicating whether the account is enabled for use.
            </summary>
        </member>
        <member name="T:Dundas.Dashboard.Integration.Administration.LocalUserAccount">
            <summary>
            An account of a user whose credentials and description are managed by the
            Dundas Dashboard application.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.LocalUserAccount.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.Administration.LocalUserAccount"/> class.
            </summary>
            <param name="accountName">The account's name.</param>
            <param name="password">The account's password.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.LocalUserAccount.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.Administration.LocalUserAccount"/> class.
            </summary>
            <param name="accountName">The account's name.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.LocalUserAccount.SetPassword(System.Guid,System.String)">
            <summary>
            Sets a local account's password.
            </summary>
            <param name="accountId">The account's ID.</param>
            <param name="newPassword">The account's new unencrypted password.</param>
            <exception cref="T:Dundas.Dashboard.ObjectNotFoundException">The account does not exist.</exception>
            <exception cref="T:Dundas.Dashboard.NoPrivilegeException">No privilege for attempted operation.</exception>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
            <remarks>
            A session with administrative privileges is required to perform this operation.
            </remarks>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.LocalUserAccount.SetFrom(Dundas.Dashboard.Integration.Administration.Account)">
            <summary>
            Sets the properties of this instance from another <see cref="T:Dundas.Dashboard.Integration.Administration.Account"/>.
            </summary>
            <param name="sourceAccount">The source account.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.LocalUserAccount.ToDataContract">
            <summary>
            Returns a data contract version of the instance.
            </summary>
            <returns>The data contract.</returns>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Administration.LocalUserAccount._newAccountPassword">
            <summary>
            The password to be used when creating a new <see cref="T:Dundas.Dashboard.Integration.Administration.LocalUserAccount"/>.
            </summary>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.LocalUserAccount.PasswordExpired">
            <summary>
            Gets or sets a value indicating whether the account's password
            has expired.
            </summary>
            <value>
            <see langword="true"/> if the account's password has expired, otherwise <see langword="false"/>.
            </value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.LocalUserAccount.CanChangePassword">
            <summary>
            Gets or sets a value indicating whether the account holder is permitted
            to change their password.
            </summary>
            <value>
            <see langword="true"/> if the password can be changed, otherwise <see langword="false"/>.
            </value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.LocalUserAccount.Email">
            <summary>
            Gets or sets the account's email address.
            </summary>
            <value>The account's email address.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.LocalUserAccount.FirstName">
            <summary>
            Gets or sets the account's first name.
            </summary>
            <value>The account's first name.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.LocalUserAccount.LastName">
            <summary>
            Gets or sets the account's last name.
            </summary>
            <value>The account's last name.</value>
        </member>
        <member name="T:Dundas.Dashboard.Integration.Administration.VirtualWindowsUserAccount">
            <summary>
            An implicitly created account representing a Windows user.  A WindowsVirtualAccount
            cannot be disabled or deleted.
            </summary>
        </member>
        <member name="T:Dundas.Dashboard.Integration.Administration.WindowsAccount">
            <summary>
            An account of a user whose credentials and description are managed by Windows.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.WindowsAccount.#ctor(System.String,Dundas.Dashboard.Extensibility.AccountServices.AccountType)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.Administration.WindowsAccount"/> class.
            </summary>
            <param name="accountName">The account's name.</param>
            <param name="windowsAccountType">The type of Windows account.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.WindowsAccount.SetFrom(Dundas.Dashboard.Integration.Administration.Account)">
            <summary>
            Sets the properties of this instance from another <see cref="T:Dundas.Dashboard.Integration.Administration.Account"/>.
            </summary>
            <param name="sourceAccount">The source account.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.WindowsAccount.ToDataContract">
            <summary>
            Returns a data contract version of the instance.
            </summary>
            <returns>The data contract.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.VirtualWindowsUserAccount.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.Administration.VirtualWindowsUserAccount"/> class.
            </summary>
            <param name="accountName">The account's name.</param>
        </member>
        <member name="T:Dundas.Dashboard.Integration.Administration.WindowsGroupAccount">
            <summary>
            An account representing a Windows group.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.WindowsGroupAccount.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.Administration.WindowsGroupAccount"/> class.
            </summary>
            <param name="accountName">The account's name.</param>
        </member>
        <member name="T:Dundas.Dashboard.Integration.Administration.WindowsUserAccount">
            <summary>
            An account representing a Windows user.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.WindowsUserAccount.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.Administration.WindowsUserAccount"/> class.
            </summary>
            <param name="accountName">The account's name.</param>
        </member>
        <member name="T:Dundas.Dashboard.Integration.Administration.Group">
            <summary>
            A named collection of <see cref="T:Dundas.Dashboard.Integration.Administration.Account"/>s
            and other <see cref="T:Dundas.Dashboard.Integration.Administration.Group"/>s.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Group.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.Administration.Group"/> class.
            </summary>
            <param name="groupName">Name of the group.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Group.#ctor(Dundas.Dashboard.Integration.Services.GroupData)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.Administration.Group"/> class from its data contract
            </summary>
            <param name="dataContract">The data contract.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Group.GetInfo">
            <summary>
            Gets a <see cref="T:Dundas.Dashboard.Integration.Administration.GroupInfo"/> object that represents this instance.
            </summary>
            <returns>The <see cref="T:Dundas.Dashboard.Integration.Administration.GroupInfo"/> object.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Group.Save">
            <summary>
            Creates or updates this instance.
            </summary>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Group.Delete(System.Guid)">
            <summary>
            Deletes a <see cref="T:Dundas.Dashboard.Integration.Administration.Group"/> specified by its ID.
            </summary>
            <param name="groupId">The group ID.</param>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Group.GetById(System.Guid)">
            <summary>
            Retrieves a <see cref="T:Dundas.Dashboard.Integration.Administration.Group"/> specified by its ID.
            </summary>
            <param name="groupId">The group ID.</param>
            <returns>The <see cref="T:Dundas.Dashboard.Integration.Administration.Group"/> or <see langword="null"/> if not found.</returns>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Group.GetById(System.Guid,System.Boolean)">
            <summary>
            Retrieves a <see cref="T:Dundas.Dashboard.Integration.Administration.Group"/> specified by its ID.
            </summary>
            <param name="groupId">The group ID.</param>
            <param name="throwIfNotFound">
            If set to <see langword="true"/> throws an exception if the group does not exist; otherwise, returns
            <see langword="null"/> if the group does not exist.
            </param>
            <returns>The <see cref="T:Dundas.Dashboard.Integration.Administration.Group"/>.</returns>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Group.GetByName(System.String)">
            <summary>
            Retrieves a <see cref="T:Dundas.Dashboard.Integration.Administration.Group"/> specified by its name.
            </summary>
            <param name="groupName">The group name.</param>
            <returns>The <see cref="T:Dundas.Dashboard.Integration.Administration.Group"/> or <see langword="null"/> if not found.</returns>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Group.GetByName(System.String,System.Boolean)">
            <summary>
            Retrieves a <see cref="T:Dundas.Dashboard.Integration.Administration.Group"/> specified by its name.
            </summary>
            <param name="groupName">The group name.</param>
            <param name="throwIfNotFound">
            If set to <see langword="true"/> throws an exception if the group does not exist; otherwise, returns
            <see langword="null"/> if the group does not exist.
            </param>
            <returns>The <see cref="T:Dundas.Dashboard.Integration.Administration.Group"/>.</returns>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Group.GetGroups">
            <summary>
            Gets the <see cref="T:Dundas.Dashboard.Integration.Administration.Group"/>s in the Dundas Dashboard application.
            </summary>
            <returns>The groups.</returns>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Group.GetGroupByIdOrName(System.Nullable{System.Guid},System.String,System.Boolean)">
            <summary>
            Retrieves an <see cref="T:Dundas.Dashboard.Integration.Administration.Group"/> specified by its ID or name.
            </summary>
            <param name="groupId">The group ID or <see langword="null"/> if not specified.</param>
            <param name="groupName">The group name or <see langword="null"/> if not specified.</param>
            <param name="throwIfNotFound">
            If set to <see langword="true"/> throws an exception if the group does not exist; otherwise, returns
            <see langword="null"/> if the group does not exist.
            </param>
            <returns>The <see cref="T:Dundas.Dashboard.Integration.Administration.Group"/>.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Group.SetFrom(Dundas.Dashboard.Integration.Administration.Group)">
            <summary>
            Sets the properties of this instance from another <see cref="T:Dundas.Dashboard.Integration.Administration.Group"/>.
            </summary>
            <param name="sourceGroup">The source group.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.Group.ToDataContract">
            <summary>
            Returns a data contract version of the instance.
            </summary>
            <returns>The data contract.</returns>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.Group.Id">
            <summary>
            Gets the group's ID.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.Group.Name">
            <summary>
            Gets or sets the name of the group.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.Group.Comment">
            <summary>
            Gets or sets the comment associated with the group.
            </summary>
            <value>The comment.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.Group.IsEnabled">
            <summary>
            Gets or sets a value indicating whether the group is enabled for use.
            </summary>
            <value>
            <value><see langword="true"/> if the group is enabled for use; otherwise, <see langword="false"/>.</value>
            </value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.Group.CustomAttributes">
            <summary>
            Gets the group's explicitly assigned custom attributes.
            </summary>
            <value>The custom attributes.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.Group.GrantedStandardPrivileges">
            <summary>
            Gets the granted standard privileges.
            </summary>
            <value>The granted standard privileges.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.Group.DeniedStandardPrivileges">
            <summary>
            Gets the denied standard privileges.
            </summary>
            <value>The denied standard privileges.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.Group.Groups">
            <summary>
            Gets information about the groups that belong to this group.
            </summary>
            <value>Information about the groups.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.Group.Accounts">
            <summary>
            Gets information about the accounts that belong to this group.
            </summary>
            <value>Information about the accounts.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.Group.CreatedTime">
            <summary>
            Gets the UTC time the group was created.
            </summary>
            <value>The UTC time the group was created.</value>
        </member>
        <member name="T:Dundas.Dashboard.Integration.Administration.GroupInfo">
            <summary>
            Information about a Dundas Dashboard security group.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.GroupInfo.#ctor(Dundas.Dashboard.Integration.Administration.GroupInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.Administration.GroupInfo"/> class from another instance.
            </summary>
            <param name="source">The source instance.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.GroupInfo.#ctor(Dundas.Dashboard.Integration.Services.GroupInfoData)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.Administration.GroupInfo"/> class from its data contract.
            </summary>
            <param name="dataContract">The data contract.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.GroupInfo.#ctor(Dundas.Dashboard.Integration.Administration.Group)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.Administration.GroupInfo"/> class from a <see cref="T:Dundas.Dashboard.Integration.Administration.Group"/>.
            </summary>
            <param name="group">The group.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.GroupInfo.FromId(System.Guid)">
            <summary>Creates a partially-populated <see cref="T:Dundas.Dashboard.Integration.Administration.GroupInfo"/> object representing the specified group ID.</summary>
            <param name="groupId">The group id.</param>
            <returns>A partially-populated <see cref="T:Dundas.Dashboard.Integration.Administration.GroupInfo"/> object representing the specified group ID.</returns>
            <remarks>This method does not perform a call to the server.</remarks>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Administration.GroupInfo.ToDataContract">
            <summary>
            Returns the instance's data contract.
            </summary>
            <returns>The data contract.</returns>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.GroupInfo.Id">
            <summary>
            Gets the group's id.
            </summary>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.GroupInfo.GroupName">
            <summary>
            Gets the group's name.
            </summary>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.GroupInfo.Comment">
            <summary>
            Gets the group's comment.
            </summary>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Administration.GroupInfo.IsEnabled">
            <summary>
            Gets a value indicating whether the group is enabled for use.
            </summary>
        </member>
        <member name="T:Dundas.Dashboard.Integration.Business.AnalyticalParameterInfo">
            <summary>
            Contains information for passing parameters to the viewer for analytical dashboards.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Business.AnalyticalParameterInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.Business.AnalyticalParameterInfo"/> class.
            </summary>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.AnalyticalParameterInfo.FilterlessValue">
            <summary>
            Gets the filterless value. This is a value that can be used if filters are not enabled to pass values to/from
            a dashboard.
            </summary>
            <value>The filterless value.</value>
        </member>
        <member name="T:Dundas.Dashboard.Integration.Business.AnnotationGroup">
            <summary>
            Represents and manages an annotation group and its access rights.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Business.AnnotationGroup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.Business.AnnotationGroup"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Business.AnnotationGroup.#ctor(Dundas.Dashboard.Integration.Services.AnnotationSetData)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.Business.AnnotationGroup"/> class.
            </summary>
            <param name="annotationSetData">The annotation set data.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Business.AnnotationGroup.GetById(System.Guid)">
            <summary>
            Gets the annotation group.
            </summary>
            <param name="annotationGroupId">The annotation group id.</param>
            <returns>The annotation group.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Business.AnnotationGroup.GetProjectAnnotationGroups(System.Collections.ObjectModel.Collection{System.Guid})">
            <summary>
            Gets the project annotation groups.
            </summary>
            <param name="projectIds">The project ids.</param>
            <returns>The project annotation groups.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Business.AnnotationGroup.GetAnnotationGroups(System.Guid,System.Boolean)">
            <summary>
            Gets the annotation groups.
            </summary>
            <param name="scopeObjectId">The scope object id.</param>
            <param name="includeProjectGroups">if set to <see langword="true"/> include project groups. Used only if scopeObjectId is a dashboard object (Kpi or Dataset).</param>
            <returns>The annotation groups.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Business.AnnotationGroup.Save">
            <summary>
            Saves this instance.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Business.AnnotationGroup.Delete(System.Guid)">
            <summary>
            Deletes the specified annotation group.
            </summary>
            <param name="annotationGroupId">The annotation group id.</param>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.AnnotationGroup.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.AnnotationGroup.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.AnnotationGroup.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.AnnotationGroup.ScopeObjectId">
            <summary>
            Gets or sets the scope object id.
            </summary>
            <value>The scope object id.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.AnnotationGroup.ScopeType">
            <summary>
            Gets or sets the type of the scope.
            </summary>
            <value>The type of the scope.</value>
        </member>
        <member name="T:Dundas.Dashboard.Integration.Business.Bookmark">
            <summary>
            Represents a bookmark.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Business.Bookmark.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.Business.Bookmark"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.Business.Bookmark.SerializingConstructor(System.Runtime.Serialization.StreamingContext)">
            <summary>
            Called when de-serialization occurs as this instance is marked with data contract.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.Bookmark.ContentType">
            <summary>
            Gets or sets the type of the content.
            </summary>
            <value>The type of the content.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.Bookmark.Id">
            <summary>
            Gets the bookmark's ID. This should be Guid.Empty for new Bookmarks, as the ID will be generated
            and returned.
            </summary>
            <value>The bookmark's ID.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.Bookmark.Name">
            <summary>
            Gets or sets the bookmark's name.
            </summary>
            <value>The bookmark's name.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.Bookmark.BookmarkType">
            <summary>
            Gets or sets the type of the bookmark.
            </summary>
            <value>The type of the bookmark.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.Bookmark.BusinessObjectId">
            <summary>
            Gets or sets the ID of the bookmarked business object.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.Bookmark.KeyValues">
            <summary>
            Gets or sets the key values.
            </summary>
            <value>The key values.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.Bookmark.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.Business.Bookmark.DynamicStructures">
            <summary>
            Gets or sets the dynamic structures.
            </summary>
            <value>The dynamic structures.</value>
        </member>
        <member name="T:Dundas.Dashboard.InvalidateDataCacheInfo">
            <summary>
            Information returned from an InvalidateDataCache call.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.InvalidateDataCacheInfo.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.InvalidateDataCacheInfo"/> class.
            </summary>
            <param name="numberOfItemsRemoved">The number of items removed.</param>
            <param name="numberOfItemsRemaining">The number of items remaining.</param>
            <param name="maxNumberOfItems">The max number of items.</param>
        </member>
        <member name="P:Dundas.Dashboard.InvalidateDataCacheInfo.NumberOfItemsRemoved">
            <summary>
            Gets the number of items removed from the cache.
            </summary>
        </member>
        <member name="P:Dundas.Dashboard.InvalidateDataCacheInfo.NumberOfItemsRemaining">
            <summary>
            Gets the number of items remaining in the cache.
            </summary>
        </member>
        <member name="P:Dundas.Dashboard.InvalidateDataCacheInfo.MaxNumberOfItems">
            <summary>
            Gets the maximum capacity of the cache.
            </summary>
        </member>
        <member name="T:Dundas.Dashboard.Integration.Business.ComparisonOperator">
            <summary>
            Enumeration used in determining the type of comparison to be operated on a field value.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.ComparisonOperator.NotSet">
            <summary>
            The operator has not been set up.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.ComparisonOperator.Equal">
            <summary>
            Indicates the equality operator.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.ComparisonOperator.GreaterThan">
            <summary>
            Indicates a "greater than" operator.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.ComparisonOperator.GreaterOrEqualThan">
            <summary>
            Indicates a "greater or equal than" operator.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.ComparisonOperator.SmallerThan">
            <summary>
            Indicates a "smaller than" operator.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.ComparisonOperator.SmallerOrEqualThan">
            <summary>
            Indicates a "smaller or equal than" operator.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.ComparisonOperator.Like">
            <summary>
            Indicates a sql "like" type operator.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.ComparisonOperator.NotLike">
            <summary>
            Indicates a sql "not like" type operator.
            </summary>
        </member>
        <member name="T:Dundas.Dashboard.Integration.Business.AnnotationGroupScopeType">
            <summary>
            The scope types of the Annotation Groups.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.AnnotationGroupScopeType.Project">
            <summary>
            Annotation Group belongs to project.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.AnnotationGroupScopeType.DashboardObject">
            <summary>
            Annotation Group belongs to a dashboard object (Kpi or Dataset).
            </summary>
        </member>
        <member name="T:Dundas.Dashboard.Integration.Business.DateTimeGrain">
            <summary>
            The supported Gregorian calendar date time grains.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.DateTimeGrain.NotSet">
            <summary>
            The grain is not set.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.DateTimeGrain.Century">
            <summary>
            The grain for century.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.DateTimeGrain.Decade">
            <summary>
            The grain for decade.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.DateTimeGrain.Year">
            <summary>
            The grain for year.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.DateTimeGrain.Quarter">
            <summary>
            The grain for quarter.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.DateTimeGrain.Month">
            <summary>
            The grain for month.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.DateTimeGrain.Week">
            <summary>
            The grain for week.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.DateTimeGrain.Day">
            <summary>
            The grain for day.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.DateTimeGrain.Hour">
            <summary>
            The grain for hour.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.DateTimeGrain.Minute">
            <summary>
            The grain for minute.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.DateTimeGrain.Second">
            <summary>
            The grain for second.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.DateTimeGrain.Millisecond">
            <summary>
            The grain for millisecond.
            </summary>
        </member>
        <member name="T:Dundas.Dashboard.Integration.Business.ViewerContentItemType">
            <summary>
            Allows the object ID class to allow specification of type along with ID.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.ViewerContentItemType.Unknown">
            <summary>
            Unknown object type.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.ViewerContentItemType.Bookmark">
            <summary>
            The ID corresponds to a Bookmark.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.ViewerContentItemType.Dashboard">
            <summary>
            The ID corresponds to a Dashboard.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.ViewerContentItemType.Mashup">
            <summary>
            The ID corresponds to a Mashup.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.ViewerContentItemType.DashBlock">
            <summary>
            The ID corresponds to a DashBlock.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.Business.ViewerContentItemType.Notification">
            <summary>
            The ID corresponds to a Notification.
            </summary>
        </member>
        <member name="T:Dundas.Dashboard.Business.TokenDescriptor">
            <summary>
            Class that uniquely identifies a parameter named token.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Business.TokenDescriptor.#ctor(Dundas.Dashboard.NamedToken,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Business.TokenDescriptor"/> struct.
            </summary>
            <param name="coreNamedToken">The core named token.</param>
            <param name="customTokenId">The custom token id.</param>
        </member>
        <member name="M:Dundas.Dashboard.Business.TokenDescriptor.#ctor(Dundas.Dashboard.NamedToken)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Business.TokenDescriptor"/> struct.
            </summary>
            <param name="coreNamedToken">The core named token.</param>
        </member>
        <member name="M:Dundas.Dashboard.Business.TokenDescriptor.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Business.TokenDescriptor"/> struct.
            </summary>
            <param name="customTokenId">The custom token id.</param>
        </member>
        <member name="M:Dundas.Dashboard.Business.TokenDescriptor.Equals(Dundas.Dashboard.Business.TokenDescriptor)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><see langword="true"/> if the current object is equal to the other parameter; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Business.TokenDescriptor.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
            <see langword="true"/> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Dundas.Dashboard.Business.TokenDescriptor.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Dundas.Dashboard.Business.TokenDescriptor.Clone(System.Boolean)">
            <summary>
            Clones this instance.
            </summary>
            <param name="cloneCaption">if set to <see langword="true"/> clones the caption.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Dashboard.Business.TokenDescriptor.op_Implicit(Dundas.Dashboard.NamedToken)~Dundas.Dashboard.Business.TokenDescriptor">
            <summary>
            Performs an implicit conversion from <see cref="T:Dundas.Dashboard.NamedToken"/> to <see cref="T:Dundas.Dashboard.Business.TokenDescriptor"/>.
            </summary>
            <param name="coreNamedToken">The core named token.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Business.TokenDescriptor.op_Equality(Dundas.Dashboard.Business.TokenDescriptor,Dundas.Dashboard.Business.TokenDescriptor)">
            <summary>
            Determines whether two specified objects represent the same named token id.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Business.TokenDescriptor.op_Inequality(Dundas.Dashboard.Business.TokenDescriptor,Dundas.Dashboard.Business.TokenDescriptor)">
            <summary>
            Determines whether two specified objects represent different named token id.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Business.TokenDescriptor.System#Xml#Serialization#IXmlSerializable#GetSchema">
            <inheritdoc />
        </member>
        <member name="M:Dundas.Dashboard.Business.TokenDescriptor.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
            <inheritdoc />
        </member>
        <member name="M:Dundas.Dashboard.Business.TokenDescriptor.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
            <inheritdoc />
        </member>
        <member name="P:Dundas.Dashboard.Business.TokenDescriptor.CoreNamedToken">
            <summary>
            Gets or sets the core named token.
            </summary>
            <value>The core named token.</value>
        </member>
        <member name="P:Dundas.Dashboard.Business.TokenDescriptor.CustomTokenId">
            <summary>
            Gets or sets the custom token id.
            </summary>
            <value>The custom token id.</value>
        </member>
        <member name="P:Dundas.Dashboard.Business.TokenDescriptor.None">
            <summary>
            Gets the value corresponding to "not a named token".
            </summary>
            <value>The value corresponding to "not a named token".</value>
        </member>
        <member name="P:Dundas.Dashboard.Business.TokenDescriptor.All">
            <summary>
            Gets the named token used for "all values".
            </summary>
            <value>the named token used for "all values".</value>
        </member>
        <member name="P:Dundas.Dashboard.Business.TokenDescriptor.Null">
            <summary>
            Gets the named token used for "null".
            </summary>
            <value>the named token used for "null".</value>
        </member>
        <member name="P:Dundas.Dashboard.Business.TokenDescriptor.NoSelection">
            <summary>
            The named token used for explicitly specifying "no selection".
            </summary>
        </member>
        <member name="T:Dundas.Dashboard.Integration.IntegrationHelper">
            <summary>
            The Dundas.Dashboard server integration API.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.IntegrationHelper._timeout">
            <summary>
            The timeout for communicating with the Dundas.Dashboard server.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.IntegrationHelper._ignoreCertificateValidation">
            <summary>
            The flag that indicates wheter to remove certificate validation (work around for trusted https WCF calls).
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.IntegrationHelper._sessionId">
            <summary>
            The ID of the session that is currently logged in.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.SetCurrentSessionId(System.Guid)">
            <summary>
            Sets the ID of the current session.
            </summary>
            <param name="sessionId">The session ID.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.ClearCurrentSessionId">
            <summary>
            Clears the ID of the current session.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.GetSessionCustomAttribute(System.Guid,System.String)">
            <summary>
            Gets the session custom attribute values.
            </summary>
            <param name="sessionId">The ID of the session for which the attribute value is being returned.</param>
            <param name="attributeName">The attribute name.</param>
            <returns>The session custom attribute values.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.SetSessionCustomAttribute(System.Guid,System.String,System.Collections.Generic.ICollection{System.String})">
            <summary>
            Sets the session custom attribute values.
            </summary>
            <param name="sessionId">The ID of the session on which the custom attribute is being set.</param>
            <param name="attributeName">The attribute name.</param>
            <param name="attributeValues">The attribute values.</param>
            <remarks>This method requires a session with administrative privileges be set using <see cref="M:Dundas.Dashboard.Integration.IntegrationHelper.SetCurrentSessionId(System.Guid)"/>.</remarks>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.LoginLocal(System.String,System.String)">
            <summary>
            Logs in a local user.
            </summary>
            <param name="userName">The local user's username.</param>
            <param name="password">The local user's password.</param>
            <returns>The status of the login attempt.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.LoginLocal(System.String,System.String,System.Boolean)">
            <summary>
            Logs in a local user.
            </summary>
            <param name="userName">The local user's username.</param>
            <param name="password">The local user's password.</param>
            <param name="deleteOtherSessions">
            Flag: Delete all other sessions they may have (so they don't use more than one
            instance of a named license).
            </param>
            <returns>The status of the login attempt.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.LoginLocal(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Logs in a local user.
            </summary>
            <param name="userName">The local user's username.</param>
            <param name="password">The local user's password.</param>
            <param name="cultureName">The culture to associate with the session, or <see langword="null"/> if the account's default culture should be used.</param>
            <param name="deleteOtherSessions">
            Flag: Delete all other sessions they may have (so they don't use more than one
            instance of a named license).
            </param>
            <returns>The status of the login attempt.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.LoginLocalChangePassword(System.String,System.String,System.String)">
            <summary>
            Logs in a local user and changes their password.
            </summary>
            <param name="userName">The local user's username.</param>
            <param name="oldPassword">The local user's old password.</param>
            <param name="newPassword">The local user's new password.</param>
            <returns>The status of the login attempt.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.LoginLocalChangePassword(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Logs in a local user and changes their password.
            </summary>
            <param name="userName">The local user's username.</param>
            <param name="oldPassword">The local user's old password.</param>
            <param name="newPassword">The local user's new password.</param>
            <param name="deleteOtherSessions">
            Flag: Delete all other sessions they may have (so they don't use more than one
            instance of a named license).
            </param>
            <returns>The status of the login attempt.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.LoginLocal(System.Collections.ObjectModel.Collection{Dundas.Dashboard.Extensibility.AccountServices.ILoginCredential},System.Boolean)">
            <summary>
            Logs in a local user.
            </summary>
            <param name="credentials">The local user's credentials.</param>
            <param name="deleteOtherSessions">
            Flag: Delete all other sessions they may have (so they don't use more than one
            instance of a named license).
            </param>
            <returns>The status of the login attempt.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.LoginLocal(System.Collections.ObjectModel.Collection{Dundas.Dashboard.Extensibility.AccountServices.ILoginCredential},System.String,System.Boolean)">
            <summary>
            Logs in a local user.
            </summary>
            <param name="credentials">The local user's credentials.</param>
            <param name="cultureName">The culture to associate with the session, or <see langword="null"/> if the account's default culture should be used.</param>
            <param name="deleteOtherSessions">
            Flag: Delete all other sessions they may have (so they don't use more than one
            instance of a named license).
            </param>
            <returns>The status of the login attempt.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.LoginWindows">
            <summary>
            Logs in a Windows user.
            </summary>
            <returns>The status of the login attempt.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.LoginWindows(System.Guid)">
            <summary>
            Logs in a Windows user.
            </summary>
            <param name="clientId">The ID associated with the Silverlight client, or <see cref="F:System.Guid.Empty"/> if none should be specified.</param>
            <returns>The status of the login attempt.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.LoginWindows(System.Boolean)">
            <summary>
            Logs in a Windows user.
            </summary>
            <param name="deleteOtherSessions">Flag: Delete all other sessions they may have (so they don't use more than one
            instance of a named license).</param>
            <returns>The status of the login attempt.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.LoginWindows(System.Guid,System.Boolean)">
            <summary>
            Logs in a Windows user.
            </summary>
            <param name="clientId">The ID associated with the Silverlight client, or <see cref="F:System.Guid.Empty"/> if none should be specified.</param>
            <param name="deleteOtherSessions">Flag: Delete all other sessions they may have (so they don't use more than one
            instance of a named license).</param>
            <returns>The status of the login attempt.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.LoginWindows(System.String,System.Guid,System.Boolean)">
            <summary>
            Logs in a Windows user.
            </summary>
            <param name="cultureName">The culture to associate with the session, or <see langword="null"/> if the account's default culture should be used.</param>
            <param name="clientId">The ID associated with the Silverlight client, or <see cref="F:System.Guid.Empty"/> if none should be specified.</param>
            <param name="deleteOtherSessions">Flag: Delete all other sessions they may have (so they don't use more than one
            instance of a named license).</param>
            <returns>The status of the login attempt.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Dundas.Dashboard.Integration.IntegrationHelper.LoginWindows(System.String,System.String,System.String,System.Boolean,System.String,System.Nullable{System.Guid})" -->
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.Logout(System.Guid)">
            <summary>
            Logs out a user.
            </summary>
            <param name="sessionId">The user's session id.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.GetLocalLoginToken(System.String,System.String)">
            <summary>
            Validates the username and password of a local user and returns a token if the
            credentials represent a valid Dundas Dashboard user.  Otherwise, throws an exception.
            </summary>
            <param name="userName">The local user's username.</param>
            <param name="password">The local user's password.</param>
            <returns>The login token.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.GetLocalLoginToken(System.Collections.Generic.IEnumerable{Dundas.Dashboard.Extensibility.AccountServices.ILoginCredential})">
            <summary>
            Validates the credentials of a local user and returns a token if the credentials
            represent a valid Dundas Dashboard user.  Otherwise, throws an exception.
            </summary>
            <param name="credentials">The local user's credentials.</param>
            <returns>The login token.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.GetWindowsLoginToken">
            <summary>
            Validates the credentials of a Windows user and returns a token if the credentials
            represent a valid Dundas Dashboard user.  Otherwise, throws an exception.
            </summary>
            <returns>The login token.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.Login(System.Guid,System.Guid,System.Boolean)">
            <summary>
            Logs in a user identified by a previously created login token.
            </summary>
            <param name="loginToken">The login token.</param>
            <param name="clientId">The ID associated with the Silverlight client, or <see cref="F:System.Guid.Empty"/> if none should be specified.</param>
            <param name="deleteOtherSessions">
            Flag: Delete all other sessions they may have (so they don't use more than one
            instance of a named license).
            </param>
            <returns>The status of the login attempt.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.Login(System.Guid,System.Guid,System.String,System.Boolean)">
            <summary>
            Logs in a user identified by a previously created login token.
            </summary>
            <param name="loginToken">The login token.</param>
            <param name="clientId">The ID associated with the Silverlight client, or <see cref="F:System.Guid.Empty"/> if none should be specified.</param>
            <param name="cultureName">The culture to associate with the session, or <see langword="null"/> if the account's default culture should be used.</param>
            <param name="deleteOtherSessions">
            Flag: Delete all other sessions they may have (so they don't use more than one
            instance of a named license).
            </param>
            <returns>The status of the login attempt.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.InvalidateDataCache(System.Guid,System.Collections.ObjectModel.Collection{System.Guid})">
            <summary>
            Invalidates the data cache.
            </summary>
            <param name="sessionId">The session ID to use to perform the operation.</param>
            <param name="businessObjectIds">The IDs of all objects which should be invalidated in the cache.</param>
            <returns>An object describing the result of the operation.</returns>
            <remarks>The provided session ID must belong to a user with administrative privileges in Dundas Dashboard.</remarks>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.GetClientId(System.Guid)">
            <summary>
            Gets the client ID (if any) associated with a session.
            An exception is thrown if the session doesn't exist.
            </summary>
            <param name="sessionId">The session ID.</param>
            <returns>The client ID or <see cref="F:System.Guid.Empty"/> if none.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.GetDashboardImage(System.Guid,System.Guid)">
            <summary>
            Gets the dashboard image by calling the Image Creation Service.
            </summary>
            <param name="sessionId">The session id.</param>
            <param name="dashboardId">The dashboard id.</param>
            <returns>The image as a bitmap.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.GetDashboardImage(System.Guid,System.Guid,Dundas.Dashboard.Integration.Business.ParameterInfoCollection)">
            <summary>
            Gets the dashboard image by calling the Image Creation Service.
            This method is not recommended if there are more than 5 parameters present. Instead,
            the <see cref="M:Dundas.Dashboard.Integration.IntegrationHelper.GetDashboardImageFromBookmark(System.Guid,System.Guid,System.Boolean)"/> call should be used.
            </summary>
            <param name="sessionId">The session id.</param>
            <param name="dashboardId">The dashboard id.</param>
            <param name="parameters">The parameters.</param>
            <returns>The image as a bitmap.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.GetDashboardImage(System.Guid,System.Guid,Dundas.Dashboard.Integration.Business.ParameterInfoCollection,System.Boolean)">
            <summary>
            Gets the dashboard image by calling the Image Creation Service.
            This method is not recommended if there are more than 5 parameters present. Instead,
            the <see cref="M:Dundas.Dashboard.Integration.IntegrationHelper.GetDashboardImageFromBookmark(System.Guid,System.Guid,System.Boolean)"/> call should be used.
            </summary>
            <param name="sessionId">The session id.</param>
            <param name="dashboardId">The dashboard id.</param>
            <param name="parameters">The parameters.</param>
            <param name="isTimeStampShown">if set to <see langword="true"/>, a time stamp is rendered on the created image.</param>
            <returns>The image as a bitmap.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.GetDashboardImageFromBookmark(System.Guid,System.Guid,System.Boolean)">
            <summary>
            Gets the dashboard image from a bookmark by calling the Image Creation Service.
            This method is preferred when there are more than 5 Parameters being used for a call.
            </summary>
            <param name="sessionId">The session id.</param>
            <param name="bookmarkId">The bookmark id.</param>
            <param name="isTimeStampShown">if set to <see langword="true"/>, a time stamp is rendered on the created image.</param>
            <returns>The image as a bitmap.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.GetViewableDashboardIds(System.Guid)">
            <summary>
            Gets the IDs of the dashboards to which a user has at least read access.
            </summary>
            <param name="sessionId">The user's session ID.</param>
            <returns>The dashboard IDs.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.SaveBookmark(System.Guid,Dundas.Dashboard.Integration.Business.Bookmark)">
            <summary>
            Saves the given bookmark.
            </summary>
            <param name="sessionId">The session id.</param>
            <param name="bookmark">The bookmark to save.</param>
            <returns>The saved bookmark. If the given bookmark had a Guid.Empty ID, the returned bookmark
            will have the ID of the saved object.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.GetBookmark(System.Guid,System.Guid)">
            <summary>
            Gets the bookmark from the specified id.
            </summary>
            <param name="sessionId">The session id.</param>
            <param name="bookmarkId">The bookmark id.</param>
            <returns>Returns the bookmark, or <see langword="null"/> if none is found.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.DeleteBookmark(System.Guid,System.Guid)">
            <summary>
            Deletes the specified bookmark.
            </summary>
            <param name="sessionId">The session id.</param>
            <param name="bookmarkId">The bookmark id.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.Unsubscribe(System.Guid,System.Guid,System.String,System.String)">
            <summary>
            Unsubscribes a notification.
            </summary>
            <param name="alertOptionsId">The ID of the alert options.</param>
            <param name="providerId">The provider's ID.</param>
            <param name="recipientId">The recipient's ID.</param>
            <param name="verificationHash">The verification hash.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.GetLinkUri(System.Uri,System.Guid,Dundas.Dashboard.Integration.Business.ViewerContentItemType,Dundas.Dashboard.Integration.Business.ParameterInfoCollection)">
            <summary>
            Generates a uri link that can be used to view a Dundas Dashboard object.
            </summary>
            <param name="baseUri">The base URI to use in the link.</param>
            <param name="contentId">The id of the item.</param>
            <param name="contentType">The type of the content.</param>
            <param name="parameters">The parameters, if any, to use.</param>            
            <returns>The uri that can be used to retrieve the object.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.GetLinkUri(System.Uri,System.Guid,Dundas.Dashboard.Integration.Business.ViewerContentItemType,Dundas.Dashboard.Integration.Business.ParameterInfoCollection,System.Guid)">
            <summary>
            Generates a uri link that can be used to view a Dundas Dashboard object.
            </summary>
            <param name="baseUri">The base URI to use in the link.</param>
            <param name="contentId">The id of the item.</param>
            <param name="contentType">The type of the content.</param>
            <param name="parameters">The parameters, if any, to use.</param>
            <param name="defaultFolder">The id of the folder that should be initially displayed in the viewer's navigation.</param>
            <returns>The uri that can be used to retrieve the object.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.GetLinkUri(System.Uri,System.Guid,Dundas.Dashboard.Integration.Business.ViewerContentItemType,Dundas.Dashboard.Integration.Business.ParameterInfoCollection,System.Nullable{System.Guid},System.Boolean)">
            <summary>
            Generates a uri link that can be used to view a Dundas Dashboard object.
            </summary>
            <param name="baseUri">The base URI to use in the link.</param>
            <param name="contentId">The id of the item.</param>
            <param name="contentType">The type of the content.</param>
            <param name="parameters">The parameters, if any, to use.</param>
            <param name="defaultFolder">The id of the folder that should be initially displayed in the viewer's navigation.</param>
            <param name="preserveQueryString">if set to <see langword="true"/> the query string data of the generated uri is merged with the query string data of the base uri.</param>
            <returns>The uri that can be used to retrieve the object.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.GetShortLinkId(System.Uri,System.Guid,Dundas.Dashboard.ViewerContentItemType,Dundas.Dashboard.Integration.Business.ParameterInfoCollection)">
            <summary>
            Gets the key that can be used as as a short link to a dashboard and its parameters.
            </summary>
            <param name="baseUri">The base Uri that's being used to link to dashboard, to be shortened.</param>
            <param name="contentId">The ID of the content to be linked to.</param>
            <param name="contentType">The type of content to be shown.</param>
            <param name="parameters">The collection of parameters to apply to the content being shown.</param>
            <remarks>
            The baseUri should include the various init params, and everything you wish to have in the query string, aside from the 
            given options of content, content type and parameters.  These other parameters will be maintained in this short link.
            </remarks>
            <returns>The key to be used in place of other query string parameters when viewing a dashboard.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.Ping">
            <summary>
            Pings the Dundas Dashboard server.
            </summary>
            <returns>The time taken to ping the server.</returns>
            <exception cref="T:Dundas.Dashboard.DDException">An error occurred while attempting to ping the server.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.DuplicateProject(System.Guid,System.String)">
            <summary>
            Copies all items from a specified project into a new project.
            </summary>
            <param name="sourceProjectId">The ID of the project to duplicate.</param>
            <param name="newProjectName">The name of the new project.</param>
            <returns>An object containing information about the result of the operation.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.DuplicateProject(System.Guid,System.Guid)">
            <summary>
            Copies items from a specified project into an existing project.
            </summary>
            <param name="sourceProjectId">The ID of the source project.</param>
            <param name="targetProjectId">The ID of the target project.</param>
            <returns>An object containing information about the result of the operation.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.GetViewerService05Client">
            <summary>
            Gets the Dundas.Dashboard.Integration.Viewer05Service client.
            </summary>
            <returns>The service client.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.GetAllFilesInFolder(Dundas.Dashboard.Integration.Services.FileSystemEntryData,System.Collections.Generic.List{Dundas.Dashboard.Integration.Services.FileSystemEntryData})">
            <summary>
            Gets all file data contracts in a specific folder data contract.
            </summary>
            <param name="folder">The folder.</param>
            <param name="allFiles">The collection to receive all files.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.GetDashWorksServiceClient">
            <summary>
            Gets the Dundas.Dashboard.Integration.DashWorksService client.
            </summary>
            <returns>The service client.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.DDExceptionFromDataContract(Dundas.Dashboard.Integration.Services.ExceptionData)">
            <summary>
            Creates a <see cref="T:Dundas.Dashboard.DDException"/> froms its data contract.
            </summary>
            <param name="exceptionData">The data contract.</param>
            <returns>The exception.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.DDExceptionFromDataContract(Dundas.Dashboard.Integration.WindowsLoginService.ExceptionData)">
            <summary>
            Creates a <see cref="T:Dundas.Dashboard.DDException"/> froms its data contract.
            </summary>
            <param name="exceptionData">The data contract.</param>
            <returns>The exception.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.GetBusinessServiceClient">
            <summary>
            Gets the Dundas.Dashboard.Integration.BusinessService client.
            </summary>
            <returns>The business service client.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.GetMobileKpiInformations(System.Guid,System.Collections.ObjectModel.Collection{Dundas.Dashboard.MobileKpiInformation})">
            <summary>
            Gets the kpi information.
            </summary>
            <param name="sessionId">The session id.</param>
            <param name="infos">The infos.</param>
            <returns>The Kpi information.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.GetAvailableMobileKpiInformations(System.Guid)">
            <summary>
            Gets the available mobile kpi informations.
            </summary>
            <param name="sessionId">The session id.</param>
            <returns>The collection of available mobile Kpis without metadata (i.e. no image).</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.GetWindowsLoginServiceClient">
            <summary>
            Gets a WindowsLoginService client proxy given its name.
            </summary>
            <returns>The service client proxy.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.GetNotificationServiceClient">
            <summary>
            Gets the Dundas.Dashboard.Integration.NotificationService client.
            </summary>
            <returns>The service client.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.GetServiceClient(System.String)">
            <summary>
            Gets a service client proxy given its name.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <returns>The service client proxy.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.IntegrationHelper.ValidateServerCertificate(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            Validates the server certificate.
            </summary>
            <param name="sender">The sender.</param>
            <param name="certificate">The certificate.</param>
            <param name="chain">The chain.</param>
            <param name="sslPolicyErrors">The SSL policy errors.</param>
            <returns></returns>
        </member>
        <member name="P:Dundas.Dashboard.Integration.IntegrationHelper.ServerUri">
            <summary>
            Gets or sets the base URI of the Dundas Dashboard server.
            </summary>
        </member>
        <member name="P:Dundas.Dashboard.Integration.IntegrationHelper.Timeout">
            <summary>
            Gets or sets the timeout for communicating with the Dundas.Dashboard server.
            </summary>
            <value>The timeout.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.IntegrationHelper.IgnoreCertificateValidation">
            <exclude />
            <summary>
            Gets or sets a value indicating whether to ignore remote certificate validations for all calls to the Dundas.Dashboard server.
            </summary>
        </member>
        <member name="P:Dundas.Dashboard.Integration.IntegrationHelper.CurrentSessionId">
            <summary>
            Gets the current session ID.
            </summary>
            <value>The current session id.</value>
        </member>
        <member name="T:Dundas.Dashboard.Integration.LoginCredential">
            <summary>
            A credential provided by a local user during the login process.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.LoginCredential.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.LoginCredential"/> class.
            </summary>
            <param name="id">The credential's id.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.LoginCredential.#ctor(System.Guid,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.LoginCredential"/> class.
            </summary>
            <param name="id">The credential's id.</param>
            <param name="value">The credential's value.</param>
        </member>
        <member name="P:Dundas.Dashboard.Integration.LoginCredential.Id">
            <summary>
            Gets the credential's ID.
            </summary>
        </member>
        <member name="P:Dundas.Dashboard.Integration.LoginCredential.Value">
            <summary>
            Gets or sets the credential's value.
            </summary>
        </member>
        <member name="T:Dundas.Dashboard.Integration.LoginStatus">
            <summary>
            The status of a login operation.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.LoginStatus.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.LoginStatus"/> class.
            </summary>
            <exclude/>
        </member>
        <member name="M:Dundas.Dashboard.Integration.LoginStatus.#ctor(System.Guid,Dundas.Dashboard.LoginFailureReason)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.LoginStatus"/> class.
            </summary>
            <param name="sessionId">The session ID.</param>
            <param name="loginFailureReason">The reason for the login failure if any.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.LoginStatus.#ctor(System.Guid,Dundas.Dashboard.LoginFailureReason,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.LoginStatus"/> class.
            </summary>
            <param name="sessionId">The session ID.</param>
            <param name="loginFailureReason">The reason for the login failure if any.</param>
            <param name="message">The message representing the login status.</param>
        </member>
        <member name="P:Dundas.Dashboard.Integration.LoginStatus.SessionId">
            <summary>
            Gets the user's session ID if the login attempt succeeded.
            </summary>
            <value>The session ID.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.LoginStatus.LoginFailureReason">
            <summary>
            Gets the reason why the login failed.
            </summary>
            <value>The login failure reason.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.LoginStatus.Message">
            <summary>
            Gets the message (if any) representing the login status.
            </summary>
            <value>The message.</value>
        </member>
        <member name="T:Dundas.Dashboard.Integration.AnnotationGroupAccessRights">
            <summary>
            Represents the annotation group access rights.
            </summary>
        </member>
        <member name="T:Dundas.Dashboard.Integration.ObjectAccessRights">
            <summary>
            The access rights associated with a Dundas Dashboard object.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.ObjectAccessRights.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.ObjectAccessRights"/> class.
            </summary>
            <param name="objectId">The object ID.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.ObjectAccessRights.#ctor(Dundas.Dashboard.Integration.Services.AccessRightsData)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.ObjectAccessRights"/> class from its data contract.
            </summary>
            <param name="dataContract">The data contract.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.ObjectAccessRights.Get(System.Guid)">
            <summary>
            Gets an object's access rights.
            </summary>
            <param name="objectId">The object ID.</param>
            <returns>The access rights.</returns>
            <exception cref="T:Dundas.Dashboard.ObjectNotFoundException">The object does not exist.</exception>
            <exception cref="T:Dundas.Dashboard.NoPrivilegeException">No privilege for attempted operation.</exception>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.ObjectAccessRights.Save">
            <summary>
            Saves this instance.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.ObjectAccessRights.ToDataContract">
            <summary>
            Returns the data contract of this instance.
            </summary>
            <returns>The data contract.</returns>
        </member>
        <member name="P:Dundas.Dashboard.Integration.ObjectAccessRights.ObjectId">
            <summary>
            Gets the object's ID.
            </summary>
            <value>The object's ID.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.ObjectAccessRights.Read">
            <summary>
            Gets the assignment of the Read privilege.
            </summary>
            <value>The privilege assignment.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.ObjectAccessRights.Write">
            <summary>
            Gets the assignment of the Write privilege.
            </summary>
            <value>The privilege assignment.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.ObjectAccessRights.Delete">
            <summary>
            Gets the assignment of the Delete privilege.
            </summary>
            <value>The privilege assignment.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.ObjectAccessRights.FullControl">
            <summary>
            Gets the assignment of the FullControl privilege.
            </summary>
            <value>The privilege assignment.</value>
        </member>
        <member name="M:Dundas.Dashboard.Integration.AnnotationGroupAccessRights.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.AnnotationGroupAccessRights"/> class.
            </summary>
            <param name="annotationGroupId">The annotation group id.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.AnnotationGroupAccessRights.#ctor(Dundas.Dashboard.Integration.Services.AccessRightsData)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.AnnotationGroupAccessRights"/> class.
            </summary>
            <param name="dataContract">The data contract.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.AnnotationGroupAccessRights.Get(System.Guid)">
            <summary>
            Gets the annotation group access rights.
            </summary>
            <param name="objectId">The object id.</param>
            <returns>The annotation group access rights.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.AnnotationGroupAccessRights.Save">
            <summary>
            Saves the annotation group access rights.
            </summary>
        </member>
        <member name="T:Dundas.Dashboard.Integration.CheckInInfo">
            <summary>
            Information about a check in of a Dundas Dashboard object.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.CheckInInfo.#ctor(Dundas.Dashboard.Integration.Services.CheckInInfoData)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.CheckInInfo"/> class from its data contract.
            </summary>
            <param name="dataContract">The data contract.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.CheckInInfo.GetObjectHistory(System.Guid)">
            <summary>
            Gets the check in history of an object specified by its ID.
            </summary>
            <param name="objectId">The object's ID.</param>
            <returns>The object's check in history.</returns>
            <exception cref="T:Dundas.Dashboard.ObjectNotFoundException">The object does not exist.</exception>
            <exception cref="T:Dundas.Dashboard.NoPrivilegeException">No privilege for attempted operation.</exception>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.CheckInInfo.GetUserHistory(System.Guid)">
            <summary>
            Gets the check in history of a user specified by its ID.
            </summary>
            <param name="accountId">The user's account ID.</param>
            <returns>The user's check in history.</returns>
            <exception cref="T:Dundas.Dashboard.ObjectNotFoundException">The user does not exist.</exception>
            <exception cref="T:Dundas.Dashboard.NoPrivilegeException">No privilege for attempted operation.</exception>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="P:Dundas.Dashboard.Integration.CheckInInfo.ObjectId">
            <summary>
            Gets the ID of the checked in object.
            </summary>
            <value>The checked in object's ID.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.CheckInInfo.ObjectType">
            <summary>
            Gets the type of the checked in object.
            </summary>
            <value>The type of the object.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.CheckInInfo.ObjectName">
            <summary>
            Gets the name of the checked in object.
            </summary>
            <value>The name of the object.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.CheckInInfo.CheckInTime">
            <summary>
            Gets the UTC time the object was checked in.
            </summary>
            <value>The UTC time the object was checked in.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.CheckInInfo.Comment">
            <summary>
            Gets or the check in comment.
            </summary>
            <value>The check in comment.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.CheckInInfo.UserId">
            <summary>
            Gets the ID of the user who checked in the object.
            </summary>
            <value>The user ID.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.CheckInInfo.UserName">
            <summary>
            Gets the username of the user who checked in the object.
            </summary>
            <value>The username.</value>
        </member>
        <member name="T:Dundas.Dashboard.Integration.FileSystemEntryTypeConverter">
            <summary>
            Converts a <see cref="T:Dundas.Dashboard.Integration.Services.FileSystemEntryType"/> to an <see cref="T:Dundas.Dashboard.Integration.ObjectType"/>.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.FileSystemEntryTypeConverter.ToObjectType(Dundas.Dashboard.Integration.Services.FileSystemEntryType)">
            <summary>
            Converts a <see cref="T:Dundas.Dashboard.Integration.Services.FileSystemEntryType"/> to an <see cref="T:Dundas.Dashboard.Integration.ObjectType"/>.
            </summary>
            <param name="fileSystemEntryType">The <see cref="T:Dundas.Dashboard.Integration.Services.FileSystemEntryType"/>.</param>
            <returns>The <see cref="T:Dundas.Dashboard.Integration.ObjectType"/>.</returns>
        </member>
        <member name="T:Dundas.Dashboard.Integration.FolderInfo">
            <summary>
            Information about a Dundas Dashboard object that represents a folder.
            </summary>
        </member>
        <member name="T:Dundas.Dashboard.Integration.ObjectInfo">
            <summary>
            Information about a Dundas Dashboard object.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.ObjectInfo.#ctor(Dundas.Dashboard.Integration.Services.FileSystemEntryData)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.ObjectInfo"/> class from its data contract.
            </summary>
            <param name="dataContract">The data contract.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.ObjectInfo.Get(System.Guid)">
            <summary>
            Gets information about an object specified by its ID.
            </summary>
            <param name="objectId">The object ID.</param>
            <returns>Information about the object.</returns>
            <exception cref="T:Dundas.Dashboard.ObjectNotFoundException">The object does not exist.</exception>
            <exception cref="T:Dundas.Dashboard.NoPrivilegeException">No privilege for attempted operation.</exception>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.ObjectInfo.Get(System.Guid,System.Boolean)">
            <summary>
            Gets information about an object specified by its ID.
            </summary>
            <param name="objectId">The object ID.</param>
            <param name="recurse">If <see langword="true"/>, retrieves the contents of all subfolders (if any).</param>
            <returns>Information about the object.</returns>
            <exception cref="T:Dundas.Dashboard.ObjectNotFoundException">The object does not exist.</exception>
            <exception cref="T:Dundas.Dashboard.NoPrivilegeException">No privilege for attempted operation.</exception>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.ObjectInfo.Get(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Gets information about a collection of objects specified by their IDs.
            </summary>
            <param name="objectIds">The object IDs.</param>
            <returns>Information about the objects.</returns>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.ObjectInfo.Get(System.String,System.Guid)">
            <summary>
            Gets information about an object specified by its name.
            </summary>
            <param name="name">The object's name.</param>
            <param name="parentFolderId">The ID of the folder in which the object resides.</param>
            <returns>Information about the object.</returns>
            <exception cref="T:Dundas.Dashboard.ObjectNotFoundException">The object does not exist.</exception>
            <exception cref="T:Dundas.Dashboard.NoPrivilegeException">No privilege for attempted operation.</exception>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.ObjectInfo.Get(System.String,System.Guid,System.Boolean)">
            <summary>
            Gets information about an object specified by its name.
            </summary>
            <param name="name">The object's name.</param>
            <param name="parentFolderId">The ID of the folder in which the object resides.</param>
            <param name="recurse">If <see langword="true"/>, retrieves the contents of all subfolders (if any).</param>
            <returns>Information about the object.</returns>
            <exception cref="T:Dundas.Dashboard.ObjectNotFoundException">The object does not exist.</exception>
            <exception cref="T:Dundas.Dashboard.NoPrivilegeException">No privilege for attempted operation.</exception>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.ObjectInfo.Move(System.Guid,System.Guid)">
            <summary>
            Moves an object specified by its ID.
            </summary>
            <param name="objectId">The object's ID.</param>
            <param name="destinationFolderId">The ID of the destination folder.</param>
            <returns>Information about the moved object.</returns>
            <exception cref="T:Dundas.Dashboard.ObjectNotFoundException">The object does not exist.</exception>
            <exception cref="T:Dundas.Dashboard.DuplicateObjectException">Another object with the same name already exists.</exception>
            <exception cref="T:Dundas.Dashboard.InvalidArgumentException">One or more arguments are invalid.</exception>
            <exception cref="T:Dundas.Dashboard.NoPrivilegeException">No privilege for attempted operation.</exception>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.ObjectInfo.Move(System.Guid,System.Guid,System.String)">
            <summary>
            Moves an object specified by its ID and assigns it a new name.
            </summary>
            <param name="objectId">The object's ID.</param>
            <param name="destinationFolderId">The ID of the destination folder.</param>
            <param name="newName">The object's new name or <see langword="null"/> if the name is unchanged.</param>
            <returns>Information about the moved object.</returns>
            <exception cref="T:Dundas.Dashboard.ObjectNotFoundException">The object does not exist.</exception>
            <exception cref="T:Dundas.Dashboard.DuplicateObjectException">Another object with the same name already exists.</exception>
            <exception cref="T:Dundas.Dashboard.InvalidArgumentException">One or more arguments are invalid.</exception>
            <exception cref="T:Dundas.Dashboard.NoPrivilegeException">No privilege for attempted operation.</exception>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.ObjectInfo.Rename(System.Guid,System.String)">
            <summary>
            Renames an object specified by its ID.
            </summary>
            <param name="objectId">The object's ID.</param>
            <param name="newName">The object's new name.</param>
            <returns>Information about the moved object.</returns>
            <exception cref="T:Dundas.Dashboard.ObjectNotFoundException">The object does not exist.</exception>
            <exception cref="T:Dundas.Dashboard.DuplicateObjectException">Another object with the same name already exists.</exception>
            <exception cref="T:Dundas.Dashboard.ObjectLockedException">The operation could not be performed because the object is currently locked.</exception>
            <exception cref="T:Dundas.Dashboard.InvalidArgumentException">One or more arguments are invalid.</exception>
            <exception cref="T:Dundas.Dashboard.NoPrivilegeException">No privilege for attempted operation.</exception>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.ObjectInfo.Delete(System.Guid)">
            <summary>
            Deletes an object specified by its ID.
            </summary>
            <param name="objectId">The object's ID.</param>
            <exception cref="T:Dundas.Dashboard.ObjectNotFoundException">The object does not exist.</exception>
            <exception cref="T:Dundas.Dashboard.FolderNotEmptyException">The folder cannot be deleted because it is not empty.</exception>
            <exception cref="T:Dundas.Dashboard.ObjectLockedException">The operation could not be performed because the object is currently locked.</exception>
            <exception cref="T:Dundas.Dashboard.InvalidArgumentException">One or more arguments are invalid.</exception>
            <exception cref="T:Dundas.Dashboard.NoPrivilegeException">No privilege for attempted operation.</exception>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.ObjectInfo.GetUserPendingCheckIns(System.Guid)">
            <summary>
            Gets the list of objects currently checked out to a user specified by their ID.
            </summary>
            <param name="accountId">The user's account ID.</param>
            <returns>Information about objects currently checked out to the user.</returns>
            <exception cref="T:Dundas.Dashboard.ObjectNotFoundException">The user does not exist.</exception>
            <exception cref="T:Dundas.Dashboard.NoPrivilegeException">No privilege for attempted operation.</exception>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.ObjectInfo.GetAllPendingCheckIns">
            <summary>
            Gets the list of all currently checked out objects.
            </summary>
            <returns>Information about all currently checked out objects.</returns>
            <exception cref="T:Dundas.Dashboard.NoPrivilegeException">No privilege for attempted operation.</exception>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.ObjectInfo.GetPendingCheckIns(System.Guid)">
            <summary>
            Gets the list of objects currently checked out to a user or all users.
            </summary>
            <param name="accountId">The user's account ID or Guid.Empty to indicate all users.</param>
            <returns>Information about objects currently checked out to the user.</returns>
            <exception cref="T:Dundas.Dashboard.ObjectNotFoundException">The user does not exist.</exception>
            <exception cref="T:Dundas.Dashboard.NoPrivilegeException">No privilege for attempted operation.</exception>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.ObjectInfo.FromDataContract(Dundas.Dashboard.Integration.Services.FileSystemEntryData)">
            <summary>
            Creates an instance of a <see cref="T:Dundas.Dashboard.Integration.ObjectInfo"/> froms its data contract.
            </summary>
            <param name="dataContract">The data contract.</param>
            <returns>The instance.</returns>
        </member>
        <member name="P:Dundas.Dashboard.Integration.ObjectInfo.TimeStamp">
            <summary>
            Gets or sets the timestamp of the object.
            </summary>
            <value>The time stamp.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.ObjectInfo.ObjectType">
            <summary>
            Gets the type of the object.
            </summary>
            <value>The type of the <see cref="T:Dundas.Dashboard.Integration.ObjectInfo"/>.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.ObjectInfo.IsFolder">
            <summary>
            Gets a value indicating whether this instance is folder.
            </summary>
            <value><see langword="true"/> if this instance is folder; otherwise, <see langword="false"/>.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.ObjectInfo.IsSharedResource">
            <summary>
            Gets a value indicating whether this object is part of the application's collection
            of shared resources.
            </summary>
            <value>
            <see langword="true"/> if this instance is part of the application's collection of shared
            resources; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.ObjectInfo.Id">
            <summary>
            Gets the object's ID.
            </summary>
            <value>The object's ID.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.ObjectInfo.ParentFolderId">
            <summary>
            Gets the ID of the folder in which the object resides.
            </summary>
            <value>
            The ID of the folder or <see cref="F:System.Guid.Empty"/> if the object resides at the
            root of the object store.
            </value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.ObjectInfo.ParentFolderName">
            <summary>
            Gets the fully qualified name of the object's parent folder.
            </summary>
            <value>The name of the parent folder.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.ObjectInfo.ParentProjectId">
            <summary>
            Gets the ID of the project containing this object.
            </summary>
            <value>
            The ID of the project containing this object or <see cref="F:System.Guid.Empty"/> if the
            object does not belong to a project.
            </value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.ObjectInfo.Name">
            <summary>
            Gets the object's name.
            </summary>
            <value>The object's name.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.ObjectInfo.KeyValues">
            <summary>
            Gets the key values associated with this object.
            </summary>
            <value>The object's key values.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.ObjectInfo.CreatedById">
            <summary>
            Gets the ID of the user who created the object.
            </summary>
            <value>The user's ID.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.ObjectInfo.CreatedByUserName">
            <summary>
            Gets the name of the user who created the object.
            </summary>
            <value>The name of the user.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.ObjectInfo.TimeCreated">
            <summary>
            Gets the UTC time the object was created.
            </summary>
            <value>The UTC time the object was created.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.ObjectInfo.CheckedOutById">
            <summary>
            Gets the ID of the user to whom the object is currently checked out or <see cref="F:System.Guid.Empty"/>
            if the object is not checked out.
            </summary>
            <value>The user's ID.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.ObjectInfo.CheckedOutByUserName">
            <summary>
            Gets the name of the user to whom the object is currently checked out or <see langword="null"/>
            if the object is not checked out.
            </summary>
            <value>The name of the user.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.ObjectInfo.TimeCheckedOut">
            <summary>
            Gets the UTC time the object was checked out or <see cref="F:System.DateTime.MinValue"/> if the object
            is not checked out.
            </summary>
            <value>The UTC time the object was checked out.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.ObjectInfo.TimeSaved">
            <summary>
            Gets the UTC time the checked out object was last saved or <see cref="F:System.DateTime.MinValue"/>
            if it has never been saved.
            </summary>
            <value>
            The UTC time the checked out object was last saved.
            </value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.ObjectInfo.CheckedInById">
            <summary>
            Gets the ID of the user who last checked in the object.
            </summary>
            <value>The user's ID.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.ObjectInfo.CheckedInByUserName">
            <summary>
            Gets the name of the user who last checked in the object.
            </summary>
            <value>The name of the user.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.ObjectInfo.TimeCheckedIn">
            <summary>
            Gets the UTC time the object was last checked in or <see cref="F:System.DateTime.MinValue"/> if it has
            never been checked in.
            </summary>
            <value>The UTC time the object was last checked in..</value>
        </member>
        <member name="M:Dundas.Dashboard.Integration.FolderInfo.#ctor(Dundas.Dashboard.Integration.Services.FileSystemEntryData)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.FolderInfo"/> class from its data contract.
            </summary>
            <param name="dataContract">The data contract.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.FolderInfo.CreateFolder(System.String,System.Guid)">
            <summary>
            Creates a folder.
            </summary>
            <param name="name">The name of the folder.</param>
            <param name="parentFolderId">The parent folder's ID.</param>
            <returns>Information about the created folder.</returns>
            <exception cref="T:Dundas.Dashboard.ObjectNotFoundException">The parent folder no longer exists.</exception>
            <exception cref="T:Dundas.Dashboard.DuplicateObjectException">The folder already exists.</exception>
            <exception cref="T:Dundas.Dashboard.InvalidArgumentException">One or more arguments are invalid.</exception>
            <exception cref="T:Dundas.Dashboard.NoPrivilegeException">No privilege for attempted operation.</exception>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.FolderInfo.Get(System.Guid)">
            <summary>
            Gets information about a folder specified by its ID.
            </summary>
            <param name="folderId">The folder ID.</param>
            <returns>Information about the folder.</returns>
            <exception cref="T:Dundas.Dashboard.ObjectNotFoundException">The folder does not exist.</exception>
            <exception cref="T:Dundas.Dashboard.NoPrivilegeException">No privilege for attempted operation.</exception>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.FolderInfo.Get(System.Guid,System.Boolean)">
            <summary>
            Gets information about a folder specified by its ID.
            </summary>
            <param name="folderId">The folder ID.</param>
            <param name="recurse">If <see langword="true"/>, retrieves the contents of all subfolders (if any).</param>
            <returns>Information about the folder.</returns>
            <exception cref="T:Dundas.Dashboard.ObjectNotFoundException">The folder does not exist.</exception>
            <exception cref="T:Dundas.Dashboard.NoPrivilegeException">No privilege for attempted operation.</exception>
            <exception cref="T:Dundas.Dashboard.InvalidSessionException">Your session is no longer valid.</exception>
        </member>
        <member name="M:Dundas.Dashboard.Integration.FolderInfo.GetAllFoldersInFolder(Dundas.Dashboard.Integration.FolderInfo)">
            <summary>
            Recursively gets all folders in a folder.
            </summary>
            <param name="theFolder">The folder.</param>
            <returns>All folders in the folder.</returns>
        </member>
        <member name="M:Dundas.Dashboard.Integration.FolderInfo.GetAllNonFoldersInFolder(Dundas.Dashboard.Integration.FolderInfo)">
            <summary>
            Recursively gets all non-folders in a folder.
            </summary>
            <param name="theFolder">The folder.</param>
            <returns>All non-folders in the folder.</returns>
        </member>
        <member name="P:Dundas.Dashboard.Integration.FolderInfo.NonFolders">
            <summary>
            Gets information about the non-folder objects in this instance.
            </summary>
            <value>Information about the non-folder objects.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.FolderInfo.AllNonFolders">
            <summary>
            Gets a flat list of all non-folder objects in the folder and all its subfolders.
            </summary>
            <value>The list of all the non-folder objects.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.FolderInfo.Folders">
            <summary>
            Gets information about the folders in this instance.
            </summary>
            <value>Information about the folders.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.FolderInfo.AllFolders">
            <summary>
            Gets a flat list of all folder objects in the folder and all its subfolders.
            </summary>
            <value>The list of all the folder objects.</value>
        </member>
        <member name="T:Dundas.Dashboard.Integration.ObjectType">
            <summary>
            The type of a Dundas Dashboard object.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.Undefined">
            <summary>
            The object type is undefined.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.ProjectsRootFolder">
            <summary>
            The folder containing the application's projects.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.Project">
            <summary>
            A folder representing a Dundas Dashboard project.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.DataConnectorsRootFolder">
            <summary>
            The folder containing a project's data connectors.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.DataConnectorFolder">
            <summary>
            A folder that can only contain data connectors and other data connector folders.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.VirtualTablesRootFolder">
            <summary>
            The folder containing a project's virtual tables.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.VirtualTableFolder">
            <summary>
            A user-created folder that can only contain virtual tables or other virtual table folders.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.VirtualCubesRootFolder">
            <summary>
            The folder containing a project's Virtual Cubes.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.VirtualCubeFolder">
            <summary>
            A folder that can only contain Virtual Cubes and Virtual Cube folders.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.DimensionsRootFolder">
            <summary>
            The folder containing a project's dimensions.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.DimensionFolder">
            <summary>
            A folder that can only contain dimensions or other dimension folders.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.DataSetsRootFolder">
            <summary>
            The folder containing a project's datasets.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.DataSetFolder">
            <summary>
            A folder that can only contain datasets and dataset folders.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.KpisRootFolder">
            <summary>
            The folder containing a project's KPIs.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.KpiFolder">
            <summary>
            A folder that can only contain KPIs or other KPI folders.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.DashboardsRootFolder">
            <summary>
            The folder containing a project's performance dashboards.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.DashboardFolder">
            <summary>
            A folder that can only contain performance dashboards or dashblocks and other
            dashboard folders.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.AnalyticalDashboardsRootFolder">
            <summary>
            The folder containing a project's analytical dashboards.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.AnalyticalDashboardFolder">
            <summary>
            A folder that can only contain analytical dashboards or dashblocks and other
            analytical dashboard folders.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.MashupsRootFolder">
            <summary>
            The project's folder containing the user's mashups.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.MashupFolder">
            <summary>
            A folder that can only contain mashups and other mashup folders.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.ResourcesRootFolder">
            <summary>
            The folder containing a project's resources.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.DashboardTemplatesRootFolder">
            <summary>
            The Resources subfolder containing a project's dashboard templates.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.DashboardTemplateFolder">
            <summary>
            A folder that can only contain dashboard templates and other dashboard template folders.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.ImagesRootFolder">
            <summary>
            The Resources subfolder containing a project's image resources.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.ImageFolder">
            <summary>
            A folder that can only contain images and other image folders.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.MapsRootFolder">
            <summary>
            The Resources subfolder containing a project's map resources.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.MapFolder">
            <summary>
            A folder that can only contain maps and other map folders.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.StylesRootFolder">
            <summary>
            The Resources subfolder containing a project's style resources.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.StyleFolder">
            <summary>
            A folder that can only contain styles and other style folders.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.PalettesRootFolder">
            <summary>
            The Resources subfolder containing a project's palette resources.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.PaletteFolder">
            <summary>
            A folder that can only contain palettes and other palette folders.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.ThemesRootFolder">
            <summary>
            The Resources subfolder containing a project's theme resources.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.ThemeFolder">
            <summary>
            A folder that can only contain themes and other theme folders.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.SharedResourcesRootFolder">
            <summary>
            The folder containing the application's shared resources.        
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.BookmarksRootFolder">
            <summary>
            The folder containing the application's user-specific root bookmark folders.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.BookmarksUserRootFolder">
            <summary>
            The folder containing a user's bookmarks.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.ScriptModulesRootFolder">
            <summary>
            The Resources subfolder containing a project's ScriptModule resources.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.ScriptModuleFolder">
            <summary>
            A folder that can only contain ScriptModules and other ScriptModule folders.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.BookmarkFolder">
            <summary>
            A folder that can only contain bookmarks and other bookmark folders.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.DataConnector">
            <summary>
            A data connector.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.VirtualTable">
            <summary>
            A virtual table.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.VirtualCube">
            <summary>
            A Virtual Cubes.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.Dimension">
            <summary>
            A dimension.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.DataSet">
            <summary>
            A dataset.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.Kpi">
            <summary>
            A KPI.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.Dashboard">
            <summary>
            A performance dashboard.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.DashBlock">
            <summary>
            A performance dashblock (i.e. a performance dashboard that can be contained in a mashup).
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.AnalyticalDashboard">
            <summary>
            An analytical dashboard.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.AnalyticalDashBlock">
            <summary>
            An analytical dashblock (i.e. an analytical dashboard that can be contained in a mashup).
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.Mashup">
            <summary>
            A mashup.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.DashboardTemplate">
            <summary>
            A dashboard template.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.Image">
            <summary>
            An image.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.Map">
            <summary>
            A map resource.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.Style">
            <summary>
            A style resource.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.Palette">
            <summary>
            A palette resource.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.Theme">
            <summary>
            A theme resource.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.ScriptModule">
            <summary>
            A ScriptModule resource.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.ObjectType.Bookmark">
            <summary>
            A bookmark.
            </summary>
        </member>
        <member name="T:Dundas.Dashboard.Integration.PrivilegeAssignee">
            <summary>
            An entity to which a <see cref="T:Dundas.Dashboard.Extensibility.ObjectAccessPrivilege"/> is granted or denied.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.PrivilegeAssignee.#ctor(Dundas.Dashboard.Integration.PrivilegeAssigneeType,System.Guid,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.PrivilegeAssignee"/> class.
            </summary>
            <param name="assigneeType">Type of the assignee.</param>
            <param name="id">The assignee's ID.</param>
            <param name="name">The assignee's name.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.PrivilegeAssignee.#ctor(Dundas.Dashboard.Integration.Services.PrivilegeAssigneeData)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.PrivilegeAssignee"/> class from its data contract.
            </summary>
            <param name="dataContract">The data contract.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.PrivilegeAssignee.ToDataContract">
            <summary>
            Returns the data contract of this instance.
            </summary>
            <returns>The data contract.</returns>
        </member>
        <member name="P:Dundas.Dashboard.Integration.PrivilegeAssignee.AssigneeType">
            <summary>
            Gets the type of the assignee.
            </summary>
            <value>The type of the assignee.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.PrivilegeAssignee.Id">
            <summary>
            Gets the ID of the assignee.
            </summary>
            <value>The ID of the assignee.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.PrivilegeAssignee.Name">
            <summary>
            Gets the name of the assignee.
            </summary>
            <value>The name of the assignee.</value>
        </member>
        <member name="T:Dundas.Dashboard.Integration.PrivilegeAssigneeType">
            <exclude/>
            <summary>
            The type of entity to which an <see cref="T:Dundas.Dashboard.Extensibility.ObjectAccessPrivilege"/> is granted or denied.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.PrivilegeAssigneeType.LocalUserAccount">
            <summary>
            The entity is a Dundas Dashboard local user.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.PrivilegeAssigneeType.WindowsUserAccount">
            <summary>
            The entity is a Windows user.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.PrivilegeAssigneeType.WindowsGroupAccount">
            <summary>
            The entity is a Windows group.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.PrivilegeAssigneeType.WindowsVirtualUser">
            <summary>
            The entity is a virtual Windows user, i.e. one who is permitted to login to application
            by virtue of directly belonging to one or more Windows group accounts.
            </summary>
        </member>
        <member name="F:Dundas.Dashboard.Integration.PrivilegeAssigneeType.Group">
            <summary>
            The entity is a Dundas Dashboard group.
            </summary>
        </member>
        <member name="T:Dundas.Dashboard.Integration.PrivilegeAssignment">
            <summary>
            Specifies the entities to which an <see cref="T:Dundas.Dashboard.Extensibility.ObjectAccessPrivilege"/> is granted and denied.
            </summary>
        </member>
        <member name="M:Dundas.Dashboard.Integration.PrivilegeAssignment.#ctor(Dundas.Dashboard.Extensibility.ObjectAccessPrivilege)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.PrivilegeAssignment"/> class.
            </summary>
            <param name="privilege">The privilege.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.PrivilegeAssignment.#ctor(System.Guid,Dundas.Dashboard.Integration.Services.PrivilegeAssignmentData)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Dashboard.Integration.PrivilegeAssignment"/> class from its data contract.
            </summary>
            <param name="privilegeId">The privilege ID.</param>
            <param name="dataContract">The data contract.</param>
        </member>
        <member name="M:Dundas.Dashboard.Integration.PrivilegeAssignment.ToDataContract">
            <summary>
            Returns the data contract of this instance.
            </summary>
            <returns>The data contract.</returns>
        </member>
        <member name="P:Dundas.Dashboard.Integration.PrivilegeAssignment.Privilege">
            <summary>
            Gets the privilege.
            </summary>
            <value>The <see cref="P:Dundas.Dashboard.Integration.PrivilegeAssignment.Privilege"/>.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.PrivilegeAssignment.GrantedTo">
            <summary>
            Gets entities to which the the privilege is granted.
            </summary>
            <value>
            The entity, which is an <see cref="T:Dundas.Dashboard.Integration.Administration.Account"/>
            or a <see cref="T:Dundas.Dashboard.Integration.Administration.Group"/>.
            </value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.PrivilegeAssignment.DeniedTo">
            <summary>
            Gets entities to which the the privilege is denied.
            </summary>
            <value>
            The entity, which is an <see cref="T:Dundas.Dashboard.Integration.Administration.Account"/>
            or a <see cref="T:Dundas.Dashboard.Integration.Administration.Group"/>.
            </value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.PrivilegeAssignment.Deleted">
            <summary>
            Gets the deleted privilege assignees.
            </summary>
            <value>The deleted.</value>
        </member>
        <member name="T:Dundas.Dashboard.Integration.DuplicateProjectResult">
            <summary>
            Represents the result of a project duplication operation.
            </summary>
        </member>
        <member name="P:Dundas.Dashboard.Integration.DuplicateProjectResult.CreatedObjects">
            <summary>
            Gets a collection containing information about all new objects which were created
            as a result of the project duplication operation.
            </summary>
            <value>The created objects.</value>
        </member>
        <member name="P:Dundas.Dashboard.Integration.DuplicateProjectResult.TargetProjectId">
            <summary>
            Gets the ID of the project in which the new objects were created.
            </summary>
        </member>
    </members>
</doc>
